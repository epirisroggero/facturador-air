<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:components="biz.fulltime.ui.components.*" xmlns:deudores="biz.fulltime.ui.deudores.*" xmlns:expediciones="biz.fulltime.ui.expediciones.*"
		 xmlns:facturacion="biz.fulltime.ui.facturacion.*" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:ui1="biz.fulltime.ui.*"
		 width="100%" height="100%" creationComplete="creationCompleteHandler(event)" xmlns:buttonBar="skin.components.buttonBar.*" xmlns:tabBar="skin.components.tabBar.*">

	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.event.AbrirFacturaEvent;
			import biz.fulltime.event.ClienteEvent;
			import biz.fulltime.event.ExportToCSVEvent;
			import biz.fulltime.event.ExportToExcelEvent;
			import biz.fulltime.event.ExportToPDFEvent;
			import biz.fulltime.event.MenuEventFT;
			import biz.fulltime.model.CotizacionesModel;
			import biz.fulltime.model.Documento;
			import biz.fulltime.ui.articulos.ArticuloEditor;
			import biz.fulltime.ui.components.EditarComprobanteDescuentos;
			import biz.fulltime.ui.configure.FrmOpciones;
			import biz.fulltime.ui.contactos.ContactoEditor;
			import biz.fulltime.ui.crud.fanfold.FrmFanfold;
			import biz.fulltime.ui.crud.tipoEntrega.FrmTipoEntrega;
			import biz.fulltime.ui.crud.usuarios.FormUsuario;
			import biz.fulltime.ui.deudores.ListadoDeudores;
			import biz.fulltime.ui.efactura.FrmEFactura;
			import biz.fulltime.ui.expediciones.FrmExpediciones;
			import biz.fulltime.ui.facturacion.FacturacionPnl;
			import biz.fulltime.ui.facturacion.LstComprasPlazaPnl;
			import biz.fulltime.ui.facturacion.LstCotizacionesPnl;
			import biz.fulltime.ui.facturacion.LstFacturasPnl;
			import biz.fulltime.ui.facturacion.reportes.FrmCobranzas;
			import biz.fulltime.ui.facturacion.reportes.FrmLiquidacion;
			import biz.fulltime.ui.facturacion.reportes.FrmLiquidacionVendedores;
			import biz.fulltime.ui.facturacion.reportes.FrmListadoControlMas;
			import biz.fulltime.ui.facturacion.reportes.FrmRentaComprobantes;
			import biz.fulltime.ui.facturacion.reportes.FrmRutinaCostos;
			import biz.fulltime.ui.facturacion.stockprecio.FrmStockPrecio;
			import biz.fulltime.ui.personas.ClienteEditor;
			import biz.fulltime.ui.proveedores.ProveedoresEditor;
			import biz.fulltime.ui.recibos.LstRecibosPnl;
			import biz.fulltime.ui.recibos.RecibosPnl;
			import biz.fulltime.ui.vendedores.ReporteVendedores;
			
			import mx.core.FlexGlobals;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import spark.components.NavigatorContent;
			import spark.components.Panel;
			import spark.components.TitleWindow;
			
			import util.CatalogoFactory;

			[Bindable]
			private var _selectedIndex:Number = 0;

			[Bindable]
			private var _maximized:Boolean;

			
			private var wndDialog:TitleWindow;
			

			private function init():void {
				mainMenuBar.addEventListener(MenuEventFT.MENU_CHANGE, menuChanged);
			}
			
			private function searchElement(name:String):Boolean {
				var encontre:Boolean = false;
				for each (var element:NavigatorContent in myViewStack.getChildren()) {
					if (element.id == name) {
						myViewStack.selectedChild = element;
						encontre = true;
						break;
					}
				}
				return encontre;
			}

			private function closeElement(name:String):void {
				var encontre:Boolean = false;
				for each (var element:NavigatorContent in myViewStack.getChildren()) {
					if (element.id == name) {
						myViewStack.removeElement(element);
						break;
					}
				}		
				
			}
			
			private function menuChanged(event:MenuEventFT):void {
				if (event.navigate == MenuEventFT.FACTURACION_EVENT) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("factura");

						if (!encontre) {
							var lstFacturasPnl:LstFacturasPnl = new LstFacturasPnl();
							lstFacturasPnl.modoSolicitud = false; 
							lstFacturasPnl.addEventListener(ExportToPDFEvent.EXPORT_TO_PDF, exportToPDF);
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.id = "factura";
							navContext.label = "FacturaciÃ³n";
							navContext.addElement(lstFacturasPnl);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});
						}
					});
					
				} else if (event.navigate == MenuEventFT.RECIBOS_EVENT) {
					currentState = "running";

					callLater(function():void {
						var encontre:Boolean = searchElement("recibos");
						
						if (!encontre) {
							var lstRecibosPnl:LstRecibosPnl = new LstRecibosPnl();
							lstRecibosPnl.addEventListener(AbrirFacturaEvent.ABRIR_DOCUMENTO, function(evt:AbrirFacturaEvent):void {
								abrirDocumentoEnVentana(evt.docId);
							});

							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.id = "recibos";
							navContext.label = "Recibos";
							navContext.addElement(lstRecibosPnl);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});
						}
					});
					
				} else if (event.navigate == MenuEventFT.SOLICITUDES_EVENT) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("solicitudes");
						
						if (!encontre) {
							var lstSolicitudesPnl:LstFacturasPnl = new LstFacturasPnl();
							lstSolicitudesPnl.modoSolicitud = true;
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.id = "solicitudes";
							navContext.label = "Solicitudes";
							navContext.addElement(lstSolicitudesPnl);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});
						}
					});
					
					
				} else if (event.navigate == MenuEventFT.EXPEDICIONES_EVENT) {
					currentState = "running";
					
					callLater(function():void {						
						var encontre:Boolean = searchElement("expediciones");
						
						if (!encontre) {
							var pnlExpediciones:FrmExpediciones = new FrmExpediciones();
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.id = "expediciones";
							navContext.label = "Expediciones";
							navContext.addElement(pnlExpediciones);
							
							myViewStack.addElement(navContext);
	
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});							
						}
					});					
					
					
				} else if (event.navigate == MenuEventFT.REPORTE_DEUDORES_EVENT) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("deudores");
						
						if (!encontre) {
							var pnlDeudores:ListadoDeudores = new ListadoDeudores();
							pnlDeudores.addEventListener(AbrirFacturaEvent.ABRIR_DOCUMENTO, function(evt:AbrirFacturaEvent):void {
								abrirDocumentoEnVentana(evt.docId);
							});
	
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Listado Deudores";
							navContext.id = "deudores"; 
							navContext.addElement(pnlDeudores);
							
							myViewStack.addElement(navContext);
	
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});							
						}					
					});

				} else if (event.navigate == MenuEventFT.MOSTRAR_CLIENTES_EVENT) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("clientes");
						if (!encontre) {
							var pnlClientes:ClienteEditor = new ClienteEditor();
							
							pnlClientes.addEventListener(ExportToExcelEvent.EXPORT_TO_EXCEL, exportToExcel);

							pnlClientes.addEventListener(AbrirFacturaEvent.ABRIR_DOCUMENTO, function(evt:AbrirFacturaEvent):void {
								abrirDocumentoEnVentana(evt.docId);
							});

							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Clientes";
							navContext.id = "clientes"; 
							navContext.addElement(pnlClientes);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});
							
							pnlClientes.addEventListener(ClienteEvent.CREAR_COTIZACION_CLIENTE, function(evt:ClienteEvent):void { 
								callLater(function():void {
									var nombre:String = "cotizacionCliente_" + evt.cliente.codigo;
									var encontre:Boolean = searchElement(nombre);
									if (encontre) {
										closeElement(nombre);
									}
									var lstFacturasPnl:LstFacturasPnl = new LstFacturasPnl();
									lstFacturasPnl.modoSolicitud = false; 
									lstFacturasPnl.obtenerCotizacionVenta(evt.cliente);
									
									lstFacturasPnl.addEventListener("_cancel_", function(evt:Event):void { 
										var encontre:Boolean = searchElement(nombre);
										if (encontre) {
											closeElement(nombre);
										}
									});
									
									var navContext:NavigatorContent = new NavigatorContent();
									navContext.id = "cotizacionCliente_" + evt.cliente.codigo;
									navContext.label = "CotizaciÃ³n Cliente";
									navContext.addElement(lstFacturasPnl);
									
									myViewStack.addElement(navContext);
									
									callLater(function() : void {
										myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
										myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
									});
								});
									

							});
							pnlClientes.addEventListener(ClienteEvent.CREAR_ORDEN_VENTA_CLIENTE, function(evt:ClienteEvent):void { 
								callLater(function():void {
									var nombre:String = "ordenVentaCliente_" + evt.cliente.codigo;
									var encontre:Boolean = searchElement(nombre);
									if (encontre) {
										closeElement(nombre);
									}
									var lstFacturasPnl:LstFacturasPnl = new LstFacturasPnl();
									lstFacturasPnl.modoSolicitud = false; 
									lstFacturasPnl.obtenerOrdenVenta(evt.cliente);
									
									lstFacturasPnl.addEventListener("_cancel_", function(evt:Event):void { 
										var encontre:Boolean = searchElement(nombre);
										if (encontre) {
											closeElement(nombre);
										}
									});

									var navContext:NavigatorContent = new NavigatorContent();
									navContext.id = "ordenVentaCliente_" + evt.cliente.codigo;
									navContext.label = "Orden Venta Cliente";
									navContext.addElement(lstFacturasPnl);
									
									myViewStack.addElement(navContext);
									
									callLater(function() : void {
										myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
										myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
									});
								});
								
							});

						}					
					});
					
				} else if (event.navigate == MenuEventFT.MOSTRAR_CONTACTOS_EVENT) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("contactos");
						if (!encontre) {
							var pnlContactos:ContactoEditor = new ContactoEditor();
							
							pnlContactos.addEventListener(ExportToExcelEvent.EXPORT_TO_EXCEL, exportToExcel);
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Contactos";
							navContext.id = "contactos"; 
							navContext.addElement(pnlContactos);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});						
							
						}					
					});
					
				} else if (event.navigate == MenuEventFT.MOSTRAR_ARTICULOS_EVENT) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("articulos");
						if (!encontre) {
							var pnlArticulos:ArticuloEditor = new ArticuloEditor();
							
							pnlArticulos.addEventListener(AbrirFacturaEvent.ABRIR_DOCUMENTO, function(evt:AbrirFacturaEvent):void {
								abrirDocumentoEnVentana(evt.docId);
							});

							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "ArtÃ­culos";
							navContext.id = "articulos"; 
							navContext.addElement(pnlArticulos);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});							
						}					
					});
					
				} else if (event.navigate == MenuEventFT.REPORTE_STOCK_PRECIO_EVENT) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("valorado");
						if (!encontre) {
							var frmStockPrecio:FrmStockPrecio = new FrmStockPrecio();
							frmStockPrecio.addEventListener(ExportToPDFEvent.EXPORT_TO_PDF, exportToPDF);
							frmStockPrecio.addEventListener(ExportToExcelEvent.EXPORT_TO_EXCEL, exportToExcel);
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Valorado";
							navContext.id = "valorado"; 
							navContext.addElement(frmStockPrecio);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});							
						}					
					});
					
				} else if (event.navigate == MenuEventFT.REPORTE_RENTAS_EVENT) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("rentas");
						
						if (!encontre) {
							var pnlRentas:FrmRentaComprobantes = new FrmRentaComprobantes();
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Rentas por comprobante";
							navContext.id = "rentas"; 
							navContext.addElement(pnlRentas);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});							
						}					
					});

				} else if (event.navigate == MenuEventFT.REPORTE_COBRANZA) {
					showReporteCobranzas();
				} else if (event.navigate == MenuEventFT.REPORTE_LIQUIDACION) {					
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("liquidacion");
						
						if (!encontre) {
							var frmLiquidacion:FrmLiquidacion = new FrmLiquidacion();
							frmLiquidacion.addEventListener(ExportToCSVEvent.EXPORT_TO_CSV, exportToCSV);
														
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Liquidacion/Cobranzas";
							navContext.id = "liquidacion"; 
							navContext.addElement(frmLiquidacion);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});							
						}					
					});
				} else if (event.navigate == MenuEventFT.REPORTE_LIQUIDACION_VENDEDORES) {					
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("liquidacionVendedores");
						
						if (!encontre) {
							var frmLiquidacionVendedores:FrmLiquidacionVendedores = new FrmLiquidacionVendedores();
							frmLiquidacionVendedores.addEventListener(ExportToCSVEvent.EXPORT_TO_CSV, exportToCSV);
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "LiquidaciÃ³n Vendedores";
							navContext.id = "liquidacionVendedores"; 
							navContext.addElement(frmLiquidacionVendedores);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});							
						}					
					});
				} else if (event.navigate == MenuEventFT.REPORTE_CONTROL_MAS) {					
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("liquidacionControl");
						
						if (!encontre) {
							var frmListadoControlPlus:FrmListadoControlMas = new FrmListadoControlMas();
							frmListadoControlPlus.addEventListener(ExportToCSVEvent.EXPORT_TO_CSV, exportToCSV);
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Listado Control+";
							navContext.id = "listadoContol"; 
							navContext.addElement(frmListadoControlPlus);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});
						}
					});
					
				} else if (event.navigate == MenuEventFT.COMPRA_MERCADERIA_PLAZA) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("comprasPlaza");
						
						if (!encontre) {
							var frmComprasPlaza:LstComprasPlazaPnl = new LstComprasPlazaPnl();
							frmComprasPlaza.addEventListener(AbrirFacturaEvent.ABRIR_DOCUMENTO, function(evt:AbrirFacturaEvent):void {
								abrirDocumentoEnVentana(evt.docId);
							});
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Compras plaza";
							navContext.id = "comprasPlaza"; 
							navContext.addElement(frmComprasPlaza);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});
						}
					});

					
				} else if (event.navigate == MenuEventFT.COTIZACIONES) {					
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("cotizaciones");
						
						if (!encontre) {
							var frmCotizaciones:LstCotizacionesPnl = new LstCotizacionesPnl();
							frmCotizaciones.addEventListener(AbrirFacturaEvent.ABRIR_DOCUMENTO, function(evt:AbrirFacturaEvent):void {
								abrirDocumentoEnVentana(evt.docId);
							});

							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Cotizaciones";
							navContext.id = "cotizaciones"; 
							navContext.addElement(frmCotizaciones);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});
						}
					});
					
				} else if (event.navigate == MenuEventFT.CONFIGURAR_IMPRESORAS_EVENT) {
					configuraciones();
				} else if (event.navigate == MenuEventFT.REFRESCAR_CATALOGOS_EVENT) {
					CatalogoFactory.getInstance().loadAllCatalogs();
				} else if (event.navigate == MenuEventFT.CRUD_TIPOS_ENTREGA_EVENT) {
					showCRUDTiposEntrega();
				} else if (event.navigate == MenuEventFT.CRUD_FANFOLD) {
					showCRUDFanfold();
				} else if (event.navigate == MenuEventFT.MOSTRAR_USUARIOS_EVENT) {
					showCRUDUsuarios();
				} else if (event.navigate == MenuEventFT.DESCUENTOS_PROMETIDOS_EVENT) {
					showEditarDescuentosPrometidos();
				
				} else if (event.navigate == MenuEventFT.EFACTURA_EVENT) {
					showEFacturaUtilities();
					
				} else if (event.navigate == MenuEventFT.EXIT) {
					if (myViewStack) {
						myViewStack.removeAllElements();
					}					
					currentState = "empty"; 
					dispatchEvent(new Event("_logout"));
				} else if (event.navigate == MenuEventFT.RUTINA_COSTOS_EVENT) {
					showRutinaCostos();
				} else if (event.navigate == MenuEventFT.MOSTRAR_PROVEEDORES_EVENT) {
					currentState = "running";
					
					callLater(function():void {
						var encontre:Boolean = searchElement("proveedores");
						if (!encontre) {
							var pnlProveedores:ProveedoresEditor = new ProveedoresEditor();
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.label = "Proveedores";
							navContext.id = "proveedores"; 
							navContext.addElement(pnlProveedores);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});							
						}					
					});
					
				} else if (event.navigate == MenuEventFT.REPORTE_VENDEDORES_EVENT) {
					currentState = "running";
					
					callLater(function():void {						
						var encontre:Boolean = searchElement("reporteVendedores");
						
						if (!encontre) {
							var pnlReporteVendedores:ReporteVendedores = new ReporteVendedores();
							
							var navContext:NavigatorContent = new NavigatorContent();
							navContext.id = "reporteVendedores";
							navContext.label = "Reporte Vendedores";
							navContext.addElement(pnlReporteVendedores);
							
							myViewStack.addElement(navContext);
							
							callLater(function() : void {
								myViewStack.selectedIndex = myViewStack.getChildren().length - 1;
								myTabBar.selectedIndex = myViewStack.getChildren().length - 1;
							});							
						}
					});					

				} 
			}
			
			private function showReporteVendedores():void {
				
			}
			
			private function showEditarDescuentosPrometidos():void {
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "Descuentos prometidos por comprobantes";
					wndDialog.width = 800;
					wndDialog.height = 600;
					
					var frmEditarComprobanteDescuentos:EditarComprobanteDescuentos = new EditarComprobanteDescuentos();
					
					PopUpManager.addPopUp(wndDialog, this, true);
					PopUpManager.centerPopUp(wndDialog);
					
					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);
					frmEditarComprobanteDescuentos.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					wndDialog.addElement(frmEditarComprobanteDescuentos);
				}
				
			}

			private function showCRUDTiposEntrega():void {
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "Tipos de entrega";
					wndDialog.width = 800;
					wndDialog.height = 600;
					
					var frmTiposEntrega:FrmTipoEntrega = new FrmTipoEntrega();
					
					PopUpManager.addPopUp(wndDialog, this, true);
					PopUpManager.centerPopUp(wndDialog);
					
					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);
					frmTiposEntrega.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					wndDialog.addElement(frmTiposEntrega);
				}
			}
			
			private function showCRUDFanfold():void {
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "Numeradores de impresiÃ³n";
					wndDialog.width = 800;
					wndDialog.height = 600;
					
					var frmFanfold:FrmFanfold = new FrmFanfold();
					
					PopUpManager.addPopUp(wndDialog, this, true);
					PopUpManager.centerPopUp(wndDialog);
					
					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);
					frmFanfold.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					wndDialog.addElement(frmFanfold);
				}
			}
			
			private function showEFacturaUtilities():void {
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "EFactura - Utilidades";
					wndDialog.width = 800;
					wndDialog.height = 600;
					
					var frmEFactura:FrmEFactura = new FrmEFactura();
					
					PopUpManager.addPopUp(wndDialog, this, true);
					PopUpManager.centerPopUp(wndDialog);
					
					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);
					frmEFactura.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					wndDialog.addElement(frmEFactura);
				}
			}
			
			private function showCRUDUsuarios():void {
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "Usuarios";
					wndDialog.width = 800;
					wndDialog.height = 600;
					
					var frmUsuarios:FormUsuario = new FormUsuario();
					
					PopUpManager.addPopUp(wndDialog, this, true);
					PopUpManager.centerPopUp(wndDialog);
					
					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);
					frmUsuarios.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					wndDialog.addElement(frmUsuarios);
				}
			}

			
			private function showListaDeControlMas():void {
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "Listado de Control+";
					wndDialog.width = 380;
					wndDialog.height = 420;
					
					var frmListadoControlPlus:FrmListadoControlMas = new FrmListadoControlMas();
					frmListadoControlPlus.addEventListener(ExportToCSVEvent.EXPORT_TO_CSV, exportToCSV);
					frmListadoControlPlus.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					PopUpManager.addPopUp(wndDialog, this, false);
					PopUpManager.centerPopUp(wndDialog);
					
					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					wndDialog.addElement(frmListadoControlPlus);
				}

			}
			
			private function showRutinaCostos():void {
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "Costos";
					wndDialog.width = 480;
					wndDialog.height = 520;
					
					var frmRutinaCostos:FrmRutinaCostos = new FrmRutinaCostos();
					frmRutinaCostos.addEventListener(ExportToCSVEvent.EXPORT_TO_CSV, exportToCSV);
					frmRutinaCostos.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					PopUpManager.addPopUp(wndDialog, this, false);
					PopUpManager.centerPopUp(wndDialog);
					
					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);
					wndDialog.addElement(frmRutinaCostos);
				}
			}
		
			private function showReporteCobranzas():void {
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "Reporte Cobranzas";
					wndDialog.width = 390;
					wndDialog.height = 320;
					
					var frmCobranzas:FrmCobranzas = new FrmCobranzas();
					
					PopUpManager.addPopUp(wndDialog, this, false);
					PopUpManager.centerPopUp(wndDialog);
					
					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					wndDialog.addElement(frmCobranzas);
				}
			}
			
			
			private function showReportStockPrecio():void {				
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "Reporte de Stock y Precios";
					wndDialog.width = 600;
					wndDialog.height = 520;

					var frmStockPrecio:FrmStockPrecio = new FrmStockPrecio();
					frmStockPrecio.addEventListener(ExportToPDFEvent.EXPORT_TO_PDF, exportToPDF);
					frmStockPrecio.addEventListener(ExportToExcelEvent.EXPORT_TO_EXCEL, exportToExcel);

					PopUpManager.addPopUp(wndDialog, this, false);
					PopUpManager.centerPopUp(wndDialog);

					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);

					wndDialog.addElement(frmStockPrecio);
				}
			}
			
			private function closeHandler(event:Event):void {
				wndDialog.removeEventListener(CloseEvent.CLOSE, closeHandler);
				PopUpManager.removePopUp(wndDialog as IFlexDisplayObject);
				wndDialog = null;
				
				CotizacionesModel.getInstance().loadCotizacionesMonedas();
				
			}
			
			
			private function configuraciones():void {
				if (wndDialog == null) {
					wndDialog = new TitleWindow();
					wndDialog.title = "ConfiguraciÃ³n";
					wndDialog.width = 600;
					wndDialog.height = 520;
					
					var frmImpresoras:FrmOpciones = new FrmOpciones();
					
					PopUpManager.addPopUp(wndDialog, this, false);
					PopUpManager.centerPopUp(wndDialog);
					
					wndDialog.addEventListener(CloseEvent.CLOSE, closeHandler);
					frmImpresoras.addEventListener(CloseEvent.CLOSE, closeHandler);
					
					wndDialog.addElement(frmImpresoras);
				}
			}
			
			public function abrirDocumentoEnVentana(docId:String):void {
				var remObjLocal:RemoteObject = new RemoteObject();
				remObjLocal.destination = "CreatingRpc";
				remObjLocal.channelSet = ServerConfig.getInstance().channelSet;
				remObjLocal.showBusyCursor = true;
				remObjLocal.addEventListener(ResultEvent.RESULT, function(event:ResultEvent):void {
					var facWindow:TitleWindow = new TitleWindow();
					facWindow.title = "Factura";
					facWindow.width = 1120;
					facWindow.height = 718;
					
					facWindow.addEventListener(CloseEvent.CLOSE, closeHandler2);
					
					var doc:Documento = event.result as Documento;
					
					var frmFactura:FacturacionPnl = new FacturacionPnl();
					frmFactura.factura = doc;
					frmFactura._modoVisualizacion = true;
					
					frmFactura.addEventListener("_cancel_", function():void {
						facWindow.removeEventListener(CloseEvent.CLOSE, closeHandler2);
						PopUpManager.removePopUp(facWindow as IFlexDisplayObject);
					});
					
					PopUpManager.addPopUp(facWindow, DisplayObject(FlexGlobals.topLevelApplication), true);
					PopUpManager.centerPopUp(facWindow);
					
					facWindow.addElement(frmFactura);
				});
				
				remObjLocal.getDocumento(docId);
				
			}
			
			private function closeHandler2(event:Event):void {
				var titleWin:TitleWindow = event.target as TitleWindow;
				titleWin.removeEventListener(CloseEvent.CLOSE, closeHandler2);
				PopUpManager.removePopUp(titleWin as IFlexDisplayObject);
			}

			protected function creationCompleteHandler(event:FlexEvent):void {
				currentState = "empty";
				
				stage.addEventListener(FullScreenEvent.FULL_SCREEN, function(event:FullScreenEvent):void {
					if (event.fullScreen) {
						_maximized = true;
					} else {
						_maximized = false;
					}
				});

			}
			
			private function exportToExcel(evt:ExportToExcelEvent):void {
				dispatchEvent(new ExportToExcelEvent(ExportToExcelEvent.EXPORT_TO_EXCEL, evt.xls, evt.fileName));
			}
			
			private function exportToPDF(evt:ExportToPDFEvent):void {
				//dispatchEvent(new ExportToPDFEvent(ExportToPDFEvent.EXPORT_TO_PDF, evt.pdf));
			}
			
			private function exportToCSV(evt:ExportToCSVEvent):void {
				//dispatchEvent(new ExportToCSVEvent(ExportToCSVEvent.EXPORT_TO_CSV, evt.byteArray, evt.fileName));
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="empty"/>
		<s:State name="running"/>
	</s:states>

	<s:Rect x="0" y="19" width="18" height="100%" visible="{!_maximized}" includeInLayout="{!_maximized}">
		<s:stroke>
			<s:LinearGradientStroke weight="1" >
				<s:GradientEntry color="0xD8D8D8" />
				<s:GradientEntry color="0xD8D8D8" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>

	<!-- layer 2: control bar fill -->
	<s:Rect x="0" y="19" width="18" height="100%" visible="{!_maximized}" includeInLayout="{!_maximized}">
		<s:fill>
			<s:LinearGradient>
				<s:GradientEntry color="0xEDEDED" />
				<s:GradientEntry color="0xEDEDED" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<s:VGroup id="mainPnl" width="100%" height="100%" gap="0">
		<ui1:MainMenuBar id="mainMenuBar" fontSize="14" creationComplete="init()" visible="{!_maximized}" includeInLayout="{!_maximized}"/>
		<s:BorderContainer width="100%" backgroundColor="#F0F0F0"  includeIn="running" minHeight="28" borderAlpha="0" visible="{!_maximized}" includeInLayout="{!_maximized}">
			<s:layout>
				<s:VerticalLayout verticalAlign="bottom" paddingLeft="16"/>
			</s:layout>
			<tabBar:MyTabBar id="myTabBar" dataProvider="{myViewStack}" requireSelection="true"/>	
		</s:BorderContainer>		
		
		<s:Group width="100%" height="100%">
			<s:Group width="100%" height="100%" includeIn="empty">
				<s:HGroup bottom="10" right="15" >
					<mx:Image id="loader1" source="@Embed(source='assets/logo/logo_oscuro.gif')" alpha=".35" />
				</s:HGroup>
			</s:Group>
			<mx:ViewStack id="myViewStack" width="100%" height="100%" backgroundAlpha="0" paddingLeft="19" creationComplete="{setFocus();}" includeIn="running">
			</mx:ViewStack>
		</s:Group>
	</s:VGroup>
</s:Group>
