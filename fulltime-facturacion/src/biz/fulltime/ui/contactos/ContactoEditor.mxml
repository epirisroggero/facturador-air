<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:personas="biz.fulltime.ui.personas.*" xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" height="100%" xmlns:contactos="biz.fulltime.ui.contactos.*">
	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.event.ContactoEvent;
			import biz.fulltime.model.Contacto;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;

			private var _contactoSeleccionado:Contacto = null;

			[Bindable]
			public function get contactoSeleccionado():Contacto {
				return _contactoSeleccionado;
			}

			public function set contactoSeleccionado(value:Contacto):void {
				_contactoSeleccionado = value;
			}

			protected function hdividedbox1_creationCompleteHandler(event:FlexEvent):void {
				leftPanel.addEventListener(ContactoEvent.CONTACTO_SELECCIONADO, cambioContactoSeleccionado);
				leftPanel.addEventListener(ContactoEvent.CONTACTO_NUEVO, nuevoContacto);

				rightPanel.addEventListener(ContactoEvent.CANCELAR_EDICION, function(evt:ContactoEvent):void {
					leftPanel.visible = true;
					leftPanel.includeInLayout = true;

					leftPanel.cancelar();
				});
				rightPanel.addEventListener(ContactoEvent.CONTACTO_NUEVO, function(evt:ContactoEvent):void {
					leftPanel.visible = true;
					leftPanel.includeInLayout = true;

					leftPanel.finalizar(evt.contactoDTO);
				});
				
				rightPanel.addEventListener("changeClientState", function(evt:ContactoEvent):void {
					if (leftPanel.contactosList.listaContactos.selectedItem) {
						leftPanel.contactosList.listaContactos.selectedItem.activo = evt.contacto.ctoActivo == "S";
					}
				});

			}

			private function cambioContactoSeleccionado(event:ContactoEvent):void {
				var contactoRemObj:RemoteObject = new RemoteObject();
				contactoRemObj.destination = "CreatingRpc";
				contactoRemObj.channelSet = ServerConfig.getInstance().channelSet;
				contactoRemObj.addEventListener(ResultEvent.RESULT, resultContacto);
				contactoRemObj.addEventListener(FaultEvent.FAULT, handleFault);

				contactoRemObj.showBusyCursor = true;
				contactoRemObj.findCatalogEntity("Contacto", event.contactoDTO.codigo);
			}

			private function resultContacto(event:ResultEvent):void {
				var result:* = event.result;

				if (result is Contacto) {
					var client:Contacto = result as Contacto;

					callLater(function():void {
						client.esNuevo = false;
						contactoSeleccionado = client;
					});

					var personaRemObj:RemoteObject = new RemoteObject();
					personaRemObj.destination = "CreatingRpc";
					personaRemObj.channelSet = ServerConfig.getInstance().channelSet;
					personaRemObj.addEventListener(ResultEvent.RESULT, resultPersonas);
					personaRemObj.addEventListener(FaultEvent.FAULT, handleFault);

					personaRemObj.showBusyCursor = true;
					personaRemObj.getPersonas(client.codigo);

				}

			}

			[Bindable]
			private var personas:ArrayCollection;

			private function resultPersonas(event:ResultEvent):void {
				var result:* = event.result;

				personas = result as ArrayCollection;
			}

			private function nuevoContacto(event:ContactoEvent):void {
				var c:Contacto = new Contacto();

				c.codigo = c.codigo;
				c.nombre = c.nombre;
				
				c.esNuevo = true;

				leftPanel.visible = false;
				leftPanel.includeInLayout = false;

				rightPanel.setNuevoContacto(c);
			}

			private function handleFault(event:FaultEvent):void {
				var message:String = event.fault && event.fault.rootCause && event.fault.rootCause.localizedMessage ? event.fault.rootCause.localizedMessage : null;
				if (!message) {
					message = event.message.toString();
				}				
				Alert.show(message, "Error", 4, null, null, StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('ErrorIcon'));
			}
		]]>
	</fx:Script>

	<mx:HDividedBox width="100%" height="100%" creationComplete="hdividedbox1_creationCompleteHandler(event)">
		<contactos:ContactoEditorLeftPanel id="leftPanel" width="320" height="100%" />
		<contactos:ContactoEditorRightPanel id="rightPanel" width="100%" height="100%" contacto="{contactoSeleccionado}" personas="{personas}" />
	</mx:HDividedBox>

</s:Group>
