<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:components="components.*" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:personas="biz.fulltime.ui.personas.*"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" height="100%" creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.model.Contacto;
			import biz.fulltime.model.Persona;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import spark.events.GridSelectionEvent;
			import spark.events.IndexChangeEvent;
			
			import util.CatalogoFactory;
			import util.ErrorPanel;

			private var _persona:Persona;

			private var error:ErrorPanel;

			[Bindable]
			private var nuevo:Boolean;

			private var _personas:ArrayCollection;

			private var _contacto:Contacto;
			

			[Bindable]
			public function get contacto():Contacto {
				return _contacto;
			}

			public function set contacto(value:Contacto):void {
				_contacto = value;
			}
			
			public function getCodigoPersona():String {
				if (contacto) {
					return contacto.codigo;
				} 
				return "0";
			}

			[Bindable]
			public function get personas():ArrayCollection {
				return _personas;
			}

			public function set personas(value:ArrayCollection):void {
				_personas = value;
			}

			[Bindable]
			public function get persona():Persona {
				return _persona;
			}

			public function set persona(value:Persona):void {
				if (_persona) {
					_persona.removeEventListener("_addPersonaOk", resultGuardar);
					_persona.removeEventListener("_updatePersonaOk", resultModificar);
					_persona.removeEventListener("_deletePersonaOk", resultBorrar);
				}
				
				_persona = value;
				
				if (_persona) {
					_persona.addEventListener("_addPersonaOk", resultGuardar);
					_persona.addEventListener("_updatePersonaOk", resultModificar);
					_persona.addEventListener("_deletePersonaOk", resultBorrar);
				}
			}

			public function handleFault(event:FaultEvent):void {
				var message:String = event.fault && event.fault.rootCause && event.fault.rootCause.localizedMessage ? event.fault.rootCause.localizedMessage : null;
				if (!message) {
					message = event.message.toString();
				}				
				Alert.show(message, "Error", 4, null, null, StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('ErrorIcon'));
			}

			protected function cmdNueva_clickHandler(event:MouseEvent):void {
				nuevo = true;
				persona = new Persona();
				callLater(function():void {
						lstPersona.selectedIndex = -1;
						txtNombre.setFocus();
					});

			}

			protected function cmdBorrar_clickHandler(event:MouseEvent):void {
				Alert.show("¿Esta usted seguro de borrar '" +  persona.nombre + "'?", "Borrar Persona", Alert.YES + Alert.NO, null, myCloseHandler);
			}

			private function myCloseHandler(event:CloseEvent):void {
				if (event.detail == Alert.YES) {
					persona.borrarPersona();
				}
			}

			protected function lstPersonas_changeHandler(event:IndexChangeEvent):void {
				persona = lstPersona.selectedItem as Persona;
				callLater(function():void {
						txtNombre.setFocus();
					});
			}

			protected function cmdCerrar_clickHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}

			protected function creationCompleteHandler(event:FlexEvent):void {
				if (lstPersona.dataProvider.length > 0) {
					callLater(function():void {
							lstPersona.selectedIndex = 0;
							persona = lstPersona.dataProvider.getItemAt(0) as Persona;
						});
				} else {
					nuevo = false;
					persona = null;//new Persona();
				}

				CatalogoFactory.getInstance().addEventListener("changePersonas", function(evt:Event):void {
					lstPersona.dataProvider = CatalogoFactory.getInstance().contactos;
					callLater(function():void {
							for each (var item:Persona in CatalogoFactory.getInstance().contactos) {
								if (item.codigo == _persona.codigo) {
									lstPersona.selectedItem = item;
								}
							}
						});
					});

			}
			
			[Bindable]
			private var lastIndex:int = -1;

			protected function cmdAplicar_clickHandler(event:MouseEvent):void {
				lastIndex = lstPersona.selectedIndex;
				
				persona.codigo = getCodigoPersona();

				if (nuevo) {
					persona.savePersona();
				} else {
					persona.updatePersona();
				}
			}

			protected function cmdCancelar_clickHandler(event:MouseEvent):void {
				nuevo = false;
				callLater(function():void {
						if (lstPersona.dataProvider.length > 0) {
							lstPersona.selectedIndex = lastIndex;
							persona = lstPersona.selectedItem as Persona;
						} else {
							persona = null
						}
					});
			}

			private function resultGuardar(event:Event):void {
				msgLabel.text = "Persona Agregada con éxito."
				msgPanel.visible = true;
				msgPanel.includeInLayout = true;

				if (nuevo) {
					nuevo = false;
				}				
				reloadPersonas(persona.nombre);

				setTimeout(function():void {
						msgPanel.visible = false;
						msgPanel.includeInLayout = false;
					}, 4000);

			}

			private function resultModificar(event:Event):void {
				msgLabel.text = "Persona Modificada con éxito."
				msgPanel.visible = true;
				msgPanel.includeInLayout = true;
				
				setTimeout(function():void {
					msgPanel.visible = false;
					msgPanel.includeInLayout = false;
				}, 4000);
			}

			private function resultBorrar(event:Event):void {
				msgLabel.text = "Persona Borrada."
				msgPanel.visible = true;
				msgPanel.includeInLayout = true;
				
				reloadPersonas(null);
				
				setTimeout(function():void {
					msgPanel.visible = false;
					msgPanel.includeInLayout = false;
				}, 4000);
				
			}
				
			protected function lstPersona_selectionChangeHandler(event:GridSelectionEvent):void {
				lastIndex = lstPersona.selectedIndex;
				
				persona = lstPersona.selectedItem as Persona;
				callLater(function():void {
						txtNombre.setFocus();
					});

			}
			
			protected function cmdClose_clickHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			private function reloadPersonas(nombre:String):void {
				var personaRemObj:RemoteObject = new RemoteObject();
				personaRemObj.destination = "CreatingRpc";
				personaRemObj.channelSet = ServerConfig.getInstance().channelSet;
				personaRemObj.addEventListener(ResultEvent.RESULT, function(event:ResultEvent):void {
					var lastIndex:int = lstPersona.selectedIndex;

					var result:* = event.result;
					personas = result as ArrayCollection;
					if (nombre) { 
						updateSelected(nombre);
					} else {
						callLater(function():void {
							if (personas.length > 0) {
								if (lastIndex > personas.length - 1) {
									lstPersona.selectedIndex = lastIndex - 1; 
								} else {
									lstPersona.selectedIndex = lastIndex;
								}
								persona = lstPersona.selectedItem as Persona;
							} 
						});
					}
					
				});
				personaRemObj.addEventListener(FaultEvent.FAULT, handleFault);
				
				personaRemObj.showBusyCursor = true;
				personaRemObj.getPersonas(getCodigoPersona());
			}
			
			private function updateSelected(nombre:String):void {
				var index:int = 0
				for each (var p:Persona in personas) {
					if (p.nombre == nombre) {
						break;
					}
					index++;
					
				}
				callLater(function():void {
					lstPersona.selectedIndex = index; 
				});
				
			}

			
		]]>
	</fx:Script>

	<fx:Declarations>
		<mx:StringValidator id="nombreValidator" source="{txtNombre}" required="true" property="text" requiredFieldError="El 'Nombre' debe tener al menos 2 caracteres." minLength="2"
							tooShortError="El 'Nombre' debe tener al menos 2 caracteres." />
		<mx:StringValidator id="cargoValidator" source="{txtCargo}"  required="true" property="text" requiredFieldError="El 'Cargo' no puede quedar vacío." />
	</fx:Declarations>

	<s:Panel width="100%" height="100%" creationComplete="creationCompleteHandler(event)" styleName="pntLineasVenta">
		<s:HGroup width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" gap="0">
			<s:Panel width="200" height="100%" backgroundAlpha=".5" borderColor="#B5A7A7" borderVisible="true" dropShadowVisible="false" title="Personas">
				<s:BorderContainer width="100%" height="100%" backgroundAlpha=".16" backgroundColor="#6E87B5" borderAlpha="0">
					<s:layout>
						<s:VerticalLayout />
					</s:layout>

					<s:DataGrid id="lstPersona" width="100%" height="100%" selectionChange="lstPersona_selectionChangeHandler(event)" dataProvider="{personas}" enabled="{!nuevo}">
						<s:columns>
							<s:ArrayList>
								<s:GridColumn headerText="Nombre" dataField="nombre" />
							</s:ArrayList>
						</s:columns>
					</s:DataGrid>
				</s:BorderContainer>

				<s:controlBarContent>
					<s:HGroup width="100%" horizontalAlign="right" paddingBottom="5" paddingRight="5" paddingTop="5">
						<s:Button id="cmdNueva" click="cmdNueva_clickHandler(event)" label="Nueva" enabled="{!nuevo}" styleName="nuevaButton16" />
						<s:Button id="cmdBorrar" click="cmdBorrar_clickHandler(event)" label="Borrar" enabled="{persona != null &amp;&amp; !nuevo}" styleName="borrarButton16" />
					</s:HGroup>
				</s:controlBarContent>
			</s:Panel>

			<s:Panel width="100%" height="100%" backgroundAlpha=".5" borderColor="#CEBFBF" borderVisible="true" dropShadowVisible="false" title="Persona" >
				<s:layout>
					<s:VerticalLayout />
				</s:layout>
				<s:Form width="100%" visible="{persona != null}">
					<s:layout>
						<s:FormLayout gap="-12" />
					</s:layout>

					<s:FormItem width="100%" label="Nombre" required="true">
						<s:HGroup width="100%">
							<s:TextInput id="txtNombre" width="100%" enter="txtCargo.setFocus()" text="@{persona.nombre}" />
						</s:HGroup>
					</s:FormItem>
					<s:FormItem width="100%" label="Cargo" required="true">
						<s:HGroup width="100%">
							<s:TextInput id="txtCargo" width="100%" enter="txtTelefono.setFocus()" text="@{persona.ctoPerCargo}" />
						</s:HGroup>
					</s:FormItem>
					<s:FormItem width="100%" label="Teléfono">
						<s:TextInput id="txtTelefono" width="100%" enter="txtCelular.setFocus()" text="@{persona.ctoPerTelefono}" />
					</s:FormItem>
					<s:FormItem width="120" label="Celular">
						<s:TextInput id="txtCelular" width="100%" enter="txtEmail.setFocus()" text="@{persona.ctoPerCelular}" />
					</s:FormItem>
					<s:FormItem width="120" label="EMail">
						<s:TextInput id="txtEmail" width="100%" enter="cmdAplicar.setFocus()" text="@{persona.ctoPerEmail}" />
					</s:FormItem>
					<s:FormItem width="100%" height="100%" label="Notas">
						<s:TextArea id="txtNotas" width="100%" height="100%" text="@{persona.ctoPerNotas}" maxChars="20"/>
					</s:FormItem>
				</s:Form>
				<s:VGroup id="msgPanel" paddingLeft="20" paddingRight="20" width="100%" height="36" visible="false">
					<s:BorderContainer width="100%" height="100%" minHeight="0" borderColor="0x999999" backgroundColor="0xFAFAFA">
						<s:layout>
							<s:VerticalLayout verticalAlign="middle"/>
						</s:layout>
						<s:Label  id="msgLabel" width="100%" color="red" fontWeight="bold" paddingBottom="5" textAlign="center" text="" maxDisplayedLines="1" />
					</s:BorderContainer>
				</s:VGroup>


				<s:controlBarContent>
					<s:HGroup width="100%" horizontalAlign="right" paddingBottom="5" paddingRight="5" paddingTop="5" verticalAlign="middle">
						<mx:Image id="loader1" source="@Embed(source='assets/general/logo_oscuro.gif')" alpha=".5" scaleX=".20" scaleY=".20" />
						<s:Spacer width="100%" />
						<s:Button id="cmdAplicar" click="cmdAplicar_clickHandler(event)" label="Aplicar" styleName="aplicarButton16" 
								  enabled="{txtNombre.text.length > 0 &amp;&amp; txtCargo.text.length > 0}" visible="{persona != null}"/>
						<s:Button id="cmdCancelar" click="cmdCancelar_clickHandler(event)" label="Cancelar" visible="{nuevo}" includeInLayout="{nuevo}" styleName="closeButton16" />
						<s:Button id="cmdClose" click="cmdClose_clickHandler(event)" label="Cerrar" visible="{!nuevo}" includeInLayout="{!nuevo}" styleName="closeButton16" />
					</s:HGroup>
				</s:controlBarContent>
			</s:Panel>
		</s:HGroup>
	</s:Panel>

</s:Group>
