<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:components="components.*" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" height="100%" creationComplete="creationCompleteHandler(event)" xmlns:components1="biz.fulltime.ui.components.*" xmlns:renderers="biz.fulltime.ui.renderers.*">
	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.GeneralOptions;
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.model.Entrega;
			import biz.fulltime.model.Fanfold;
			import biz.fulltime.model.Localescomerciale;
			
			import com.hillelcoren.components.AutoComplete;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import spark.events.GridSelectionEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import util.CatalogoFactory;
			import util.ErrorPanel;
			
			private var _fanfoldActual:Fanfold;
			
			private var error:ErrorPanel;
			
			[Bindable]
			private var nuevo:Boolean;
			
			[Bindable]
			private var _local:Localescomerciale;
			
			[Bindable]
			public var lstIncrementar:ArrayCollection = new ArrayCollection([
				{value:1, label:"Por cada via que se imprime"}, 
				{value:2, label:"Cada 2 vias impresas"}, 
				{value:3, label:"Cada 3 vias impresas"}, 
				{value:4, label:"Cada 4 vias impresas"}
			]);

		
			[Bindable]
			public function get fanfoldActual():Fanfold {
				return _fanfoldActual;
			}
			
			public function set fanfoldActual(value:Fanfold):void {
				_fanfoldActual = value;
				
				for each (var o:Localescomerciale in GeneralOptions.getInstance().locales) {
					var locIdFold:Number = new Number(o.codigo);
					if (locIdFold == _fanfoldActual.locIdFold) {
						_local = o;
						break;
					}
						
				}
				if (ddlLocalComercial) {
					ddlLocalComercial.selectedItem = _local;
				}
								
			}
			
			public function handleFault(event:FaultEvent):void {
				var message:String = event.fault && event.fault.rootCause && event.fault.rootCause.localizedMessage ? event.fault.rootCause.localizedMessage : null;
				if (!message) {
					message = event.message.toString();
				}				
				Alert.show(message, "Error", 4, null, null, StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('ErrorIcon'));
			}
			
			protected function cmdNueva_clickHandler(event:MouseEvent):void {
				nuevo = true;
				
				fanfoldActual = new Fanfold();
				
				callLater(function():void {
					lstFanfold.selectedIndex = -1;
					txtCodigo.setFocus();
				});
				
			}
			
			protected function cmdBorrar_clickHandler(event:MouseEvent):void {
				Alert.show("¿Esta usted seguro de borrar '" + fanfoldActual.codigo + "-" + fanfoldActual.nombre + "'?", "Borrar numerador de impresión", Alert.YES + Alert.NO, null, myCloseHandler);
			}
			
			private function myCloseHandler(event:CloseEvent):void {
				if (event.detail == Alert.YES) {
					var remObj:RemoteObject = new RemoteObject();
					remObj.destination = "CreatingRpc";
					remObj.channelSet = ServerConfig.getInstance().channelSet;
					remObj.addEventListener(ResultEvent.RESULT, resultBorrar);
					remObj.addEventListener(FaultEvent.FAULT, handleFault);
					
					remObj.borrarFanfold(_fanfoldActual);
				}
			}
			
			private function resultBorrar(event:ResultEvent):void {
				var index:Number = lstFanfold.selectedIndex;
				if (index == 0) {
					fanfoldActual = CatalogoFactory.getInstance().fanfold.getItemAt(1) as Fanfold;
				} else if (index == CatalogoFactory.getInstance().fanfold.length - 1) {
					fanfoldActual = CatalogoFactory.getInstance().fanfold.getItemAt(index - 1) as Fanfold;
				} else {
					fanfoldActual = CatalogoFactory.getInstance().fanfold.getItemAt(index - 1) as Fanfold;
				}
				
				callLater(function():void {
					CatalogoFactory.getInstance().loadCatalogo("Fanfold");
				});
			}
			
			protected function lstFanfold_changeHandler(event:IndexChangeEvent):void {
				fanfoldActual = lstFanfold.selectedItem as Fanfold;
				/*callLater(function():void {
					txtNombre.setFocus();
				})*/;
			}
			
			protected function cmdCerrar_clickHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				CatalogoFactory.getInstance().addEventListener("changeFanfold", function(evt:Event):void {
					lstFanfold.dataProvider = CatalogoFactory.getInstance().fanfold;
					
					if (lstFanfold.dataProvider.length > 0) {
						callLater(function():void {
							if (!fanfoldActual) {
								lstFanfold.selectedIndex = 0;
								fanfoldActual = lstFanfold.dataProvider.getItemAt(0) as Fanfold;
							}							
							for each (var item:Fanfold in CatalogoFactory.getInstance().fanfold) {
								if (item.codigo == fanfoldActual.codigo) {
									lstFanfold.selectedItem = item;
								}
							}
						});
					}
				});
				CatalogoFactory.getInstance().loadCatalogo("Fanfold");

				
				CatalogoFactory.getInstance().addEventListener("changeFanfold", function(evt:Event):void {
					lstFanfold.dataProvider = CatalogoFactory.getInstance().fanfold;
				});
				
				CatalogoFactory.getInstance().addEventListener("_changeLocalesComerciales", function(evt:Event):void {
					lstFanfold.dataProvider = CatalogoFactory.getInstance().fanfold;
					callLater(function():void {
						for each (var item:Localescomerciale in GeneralOptions.getInstance().locales) {
							if (item.codigo == _fanfoldActual.locIdFold.toString()) {
								///lstFanfold.selectedItem = item;
							}
						}
					});
				});				
				
				
			}
			
			protected function cmdAplicar_clickHandler(event:MouseEvent):void {
				var remObj:RemoteObject = new RemoteObject();
				remObj.destination = "CreatingRpc";
				remObj.channelSet = ServerConfig.getInstance().channelSet;
				remObj.addEventListener(ResultEvent.RESULT, resultGuardar);
				remObj.addEventListener(FaultEvent.FAULT, handleFault);
				remObj.showBusyCursor = true;
				
				var local:String = ddlLocalComercial.selectedItem ? (ddlLocalComercial.selectedItem as Localescomerciale).codigo : "1";
				_fanfoldActual.locIdFold = new Number(local);
				_fanfoldActual.numFoldIncrementar = ddlIncrementar.selectedItem.value;
				if (nuevo) {
					remObj.altaFanfold(_fanfoldActual);
				} else {
					remObj.modificarFanfold(_fanfoldActual);
				}
			}
			
			protected function cmdCancelar_clickHandler(event:MouseEvent):void {
				nuevo = false;
				
				callLater(function():void {
					lstFanfold.selectedIndex = 0;
					fanfoldActual = lstFanfold.dataProvider.getItemAt(0) as Fanfold;
				});
				
			}
			
			private function resultGuardar(event:ResultEvent):void {
				msgLabel.text = "Numerador de impresión guardado con éxito."
				msgBox.visible = true;
				msgBox.includeInLayout = true;
				
				if (nuevo) {
					nuevo = false;
					CatalogoFactory.getInstance().loadCatalogo("Fanfold");
				}
				
				setTimeout(function():void {
					msgBox.visible = false;
					msgBox.includeInLayout = false;
				}, 3000);
				
			}
			
			private function fixLabel(item_obj:Object):String {
				var label_str:String = item_obj.codigo + " - " + item_obj.nombre;
				return label_str;
			}
			
			protected function lstFanfold_selectionChangeHandler(event:GridSelectionEvent):void {
				fanfoldActual = lstFanfold.selectedItem as Fanfold;
				callLater(function():void {
					txtNombre.setFocus();
				});
				
			}
			
			/*protected function txtIncrementar_changeHandler(event:TextOperationEvent):void {
				var incremento:String = txtIncrementar.text;
				if (incremento && incremento.length > 0) {
					fanfoldActual.numFoldIncrementar = new Number(incremento);
				} else {
					fanfoldActual.numFoldIncrementar = 1;
				}
				
			}*/
			
			protected function tiLocalComercial_creationCompleteHandler(event:FlexEvent):void {
				// TODO Auto-generated method stub
				
			}
			
			public function codigoNombreLabelFunction(item:Object):String {
				var label:String;
				if (item && item.hasOwnProperty("codigo")) {
					label = item.codigo;
				}
				if (item && item.hasOwnProperty("nombre")) {
					label += " - " + item.nombre;
				}
				return label;
			}
			
			protected function cmdClose_clickHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			protected function ddlLocalComercial_changeHandler(event:IndexChangeEvent):void {				
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:Component id="dropDownItemRenderer">
			<renderers:CodigoNombreItemRenderer />
		</fx:Component>
	</fx:Declarations>

	
	<s:Panel width="100%" height="100%" creationComplete="creationCompleteHandler(event)" styleName="pntLineasVenta">
		<s:HGroup width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" gap="0">
			<s:Panel width="200" height="100%" backgroundAlpha=".5" borderColor="#B5A7A7"
					 borderVisible="true" dropShadowVisible="false" title="Numeradores">
				
				<s:BorderContainer width="100%" height="100%" backgroundAlpha=".16" backgroundColor="#6E87B5" borderAlpha="0">
					<s:layout>
						<s:VerticalLayout />
					</s:layout>
					
					<s:DataGrid id="lstFanfold" width="100%" height="100%" selectionChange="lstFanfold_selectionChangeHandler(event)" dataProvider="{new ArrayCollection()}" enabled="{!nuevo}">
						<s:columns>
							<s:ArrayList>
								<s:GridColumn headerText="Código" width="55" dataField="codigo"/>
								<s:GridColumn headerText="Nombre" dataField="nombre"/>
							</s:ArrayList>
						</s:columns>
					</s:DataGrid>
				</s:BorderContainer>
				
				<s:controlBarContent>
					<s:HGroup width="100%" horizontalAlign="right" paddingBottom="5" paddingRight="5" paddingTop="5">
						<s:Button id="cmdNueva" click="cmdNueva_clickHandler(event)" label="Nueva" enabled="{!nuevo}" styleName="nuevaButton16"/>
						<s:Button id="cmdBorrar" click="cmdBorrar_clickHandler(event)" label="Borrar" enabled="{fanfoldActual != null &amp;&amp; !nuevo}" styleName="borrarButton16"/>
					</s:HGroup>
				</s:controlBarContent>
			</s:Panel>
			
			<s:Panel width="100%" height="100%" backgroundAlpha=".5" borderColor="#CEBFBF"
					 borderVisible="true" dropShadowVisible="false" title="{fanfoldActual.nombre}">
				<s:BorderContainer width="100%" height="100%" backgroundAlpha=".06" backgroundColor="#6E87B5" borderAlpha="0">
					<s:layout>
						<s:VerticalLayout />
					</s:layout>
					<s:Form width="100%" fontWeight="normal">
						<s:layout>
							<s:FormLayout gap="-12" />
						</s:layout>
						<s:FormItem label="Código">
							<s:TextInput id="txtCodigo" width="100" textAlign="left" text="@{fanfoldActual.codigo}" enabled="{nuevo}"/>
						</s:FormItem>
						<s:FormItem width="100%" label="Nombre">
							<s:TextInput id="txtNombre" width="100%" textAlign="left" text="@{fanfoldActual.nombre}" />
						</s:FormItem>
						<s:Spacer height="40" />
						<s:FormItem label="Serie">
							<s:TextInput id="txtFoldSerie" width="60" text="@{fanfoldActual.numFoldSerie}" maxChars="6"/>
						</s:FormItem>
						<s:FormItem label="Último N°">
							<s:TextInput id="txtFoldNumero" width="100" text="@{fanfoldActual.numFoldNumero}" restrict="0-9" textAlign="right"/>
						</s:FormItem>
						<s:Spacer height="10" />
						<s:FormItem label="Incrementar">
							<s:DropDownList id="ddlIncrementar" width="100%" textAlign="left" labelField="label" dataProvider="{lstIncrementar}" selectedIndex="{fanfoldActual.numFoldIncrementar > 0 ? fanfoldActual.numFoldIncrementar - 1 : 0}"/>
						</s:FormItem>
						<s:FormItem label="Local">
							<s:DropDownList id="ddlLocalComercial" width="100%" textAlign="left" labelField="nombre" dataProvider="{ GeneralOptions.getInstance().locales }" selectedItem="{_local}" change="ddlLocalComercial_changeHandler(event)" />
						</s:FormItem>

					</s:Form>
					<s:Spacer height="100%" />
					<s:BorderContainer id="msgBox" width="100%" visible="false" includeInLayout="false" backgroundColor="0x333333">
						<s:layout>
							<s:HorizontalLayout paddingTop="10" paddingBottom="5" horizontalAlign="center"/>
						</s:layout>
						<s:Label id="msgLabel" text="" width="100%" color="white" maxDisplayedLines="1" fontSize="14" fontWeight="normal" textAlign="center" paddingBottom="5"/>
					</s:BorderContainer>
				</s:BorderContainer>
				<s:controlBarContent>
					<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle" paddingBottom="5" paddingRight="5" paddingTop="5">
						<mx:Image id="loader1" source="@Embed(source='assets/general/logo_oscuro.gif')" alpha=".5" scaleX=".20" scaleY=".20" />
						
						<s:Spacer width="100%" />
						<s:Button id="cmdAplicar" click="cmdAplicar_clickHandler(event)" label="Aplicar" styleName="aplicarButton16" />
						<s:Button id="cmdCancelar" click="cmdCancelar_clickHandler(event)" label="Cancelar" visible="{nuevo}" includeInLayout="{nuevo}" styleName="closeButton16"/>
						<s:Button id="cmdClose" click="cmdClose_clickHandler(event)" label="Cerrar" styleName="closeButton16" visible="{!nuevo}" includeInLayout="{!nuevo}" />

					</s:HGroup>
				</s:controlBarContent>
			</s:Panel>
		</s:HGroup>
		
	</s:Panel>
	
</s:Group>
