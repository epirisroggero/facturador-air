<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:components="components.*" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" height="100%" creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.model.Entrega;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import spark.events.GridSelectionEvent;
			import spark.events.IndexChangeEvent;
			
			import util.CatalogoFactory;
			import util.ErrorPanel;

			private var _entregaActual:Entrega;

			private var error:ErrorPanel;

			[Bindable]
			private var nuevo:Boolean;

			[Bindable]
			public var myDP:ArrayCollection = new ArrayCollection([{value:"1.00", label:"Baja"}, {value:"2.00", label:"Media"}, {value:"3.00", label:"Alta"}]);

			[Bindable]
			public function get entregaActual():Entrega {
				return _entregaActual;
			}

			public function set entregaActual(value:Entrega):void {
				_entregaActual = value;

				callLater(function():void {
					for each (var o:Object in myDP) {
						if (o.value == _entregaActual.relevancia) {
							ddlRelevancia.selectedItem = o;
						}
					}
				});

			}

			public function handleFault(event:FaultEvent):void {
				var message:String = event.fault && event.fault.rootCause && event.fault.rootCause.localizedMessage ? event.fault.rootCause.localizedMessage : null;
				if (!message) {
					message = event.message.toString();
				}				
				Alert.show(message, "Error", 4, null, null, StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('ErrorIcon'));
			}

			protected function cmdNueva_clickHandler(event:MouseEvent):void {
				nuevo = true;

				entregaActual = new Entrega();
				entregaActual.relevancia = "2.0";

				callLater(function():void {
					lstTEntrega.selectedIndex = -1;
					txtCodigo.setFocus();

					ddlRelevancia.selectedIndex = 1;
				});

			}

			protected function cmdBorrar_clickHandler(event:MouseEvent):void {
				Alert.show("¿Esta usted seguro de borrar '" + entregaActual.codigo + "-" + entregaActual.nombre + "'?", "Borrar Tipo de Entrega", Alert.YES + Alert.NO, null, myCloseHandler);
			}

			private function myCloseHandler(event:CloseEvent):void {
				if (event.detail == Alert.YES) {
					var remObj:RemoteObject = new RemoteObject();
					remObj.destination = "CreatingRpc";
					remObj.channelSet = ServerConfig.getInstance().channelSet;
					remObj.addEventListener(ResultEvent.RESULT, resultBorrar);
					remObj.addEventListener(FaultEvent.FAULT, handleFault);

					remObj.borrarEntrega(_entregaActual);
				}
			}
			
			private function resultBorrar(event:ResultEvent):void {
				var index:Number = lstTEntrega.selectedIndex;
				if (index == 0) {
					entregaActual = CatalogoFactory.getInstance().entrega.getItemAt(1) as Entrega;
				} else if (index == CatalogoFactory.getInstance().entrega.length - 1) {
					entregaActual = CatalogoFactory.getInstance().entrega.getItemAt(index - 1) as Entrega;
				} else {
					entregaActual = CatalogoFactory.getInstance().entrega.getItemAt(index - 1) as Entrega;
				}
				
				callLater(function():void {
					CatalogoFactory.getInstance().loadCatalogo("Entrega");
				});
			}

			protected function lstTEntregas_changeHandler(event:IndexChangeEvent):void {
				entregaActual = lstTEntrega.selectedItem as Entrega;
				/*callLater(function():void {
					txtNombre.setFocus();
				});*/
			}

			protected function cmdCerrar_clickHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));

			}

			protected function creationCompleteHandler(event:FlexEvent):void {
				if (lstTEntrega.dataProvider.length > 0) {
					callLater(function():void {
						lstTEntrega.selectedIndex = 0;
						entregaActual = lstTEntrega.dataProvider.getItemAt(0) as Entrega;
					});
				}

				CatalogoFactory.getInstance().addEventListener("changeEntregas", function(evt:Event):void {
					lstTEntrega.dataProvider = CatalogoFactory.getInstance().entrega;
					callLater(function():void {
						for each (var item:Entrega in CatalogoFactory.getInstance().entrega) {
							if (item.codigo == _entregaActual.codigo) {
								lstTEntrega.selectedItem = item;
							}
						}
					});
				});


			}

			protected function cmdAplicar_clickHandler(event:MouseEvent):void {
				var remObj:RemoteObject = new RemoteObject();
				remObj.destination = "CreatingRpc";
				remObj.channelSet = ServerConfig.getInstance().channelSet;
				remObj.addEventListener(ResultEvent.RESULT, resultGuardar);
				remObj.addEventListener(FaultEvent.FAULT, handleFault);

				remObj.showBusyCursor = true;

				if (nuevo) {
					remObj.altaEntrega(_entregaActual);
				} else {
					remObj.modificarEntrega(_entregaActual);
				}
			}

			protected function cmdCancelar_clickHandler(event:MouseEvent):void {
				nuevo = false;

				callLater(function():void {
					lstTEntrega.selectedIndex = 0;
					entregaActual = lstTEntrega.dataProvider.getItemAt(0) as Entrega;
				});

			}

			private function resultGuardar(event:ResultEvent):void {
				msgLabel.text = "Tipo de entrega guardado con éxito."
				msgBox.visible = true;
				msgBox.includeInLayout = true;
				
				if (nuevo) {
					nuevo = false;
					CatalogoFactory.getInstance().loadCatalogo("Entrega");
				}

				setTimeout(function():void {
					msgBox.visible = false;
					msgBox.includeInLayout = false;
				}, 3000);

			}
			
			private function fixLabel(item_obj:Object):String {
				var label_str:String = item_obj.codigo + " - " + item_obj.nombre;
				return label_str;
			}

			protected function lstTEntrega_selectionChangeHandler(event:GridSelectionEvent):void {
				entregaActual = lstTEntrega.selectedItem as Entrega;
				callLater(function():void {
					txtNombre.setFocus();
				});
				
			}

			protected function cmdClose_clickHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}

		]]>
	</fx:Script>

	<s:Panel width="100%" height="100%" creationComplete="creationCompleteHandler(event)" styleName="pntLineasVenta">
		<s:HGroup width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" gap="0">
			<s:Panel width="300" height="100%" backgroundAlpha=".5" borderColor="#B5A7A7"
					 borderVisible="true" dropShadowVisible="false" title="Entregas">
				
				<s:BorderContainer width="100%" height="100%" backgroundAlpha=".16" backgroundColor="#6E87B5" borderAlpha="0">
					<s:layout>
						<s:VerticalLayout />
					</s:layout>

					<s:DataGrid id="lstTEntrega" width="100%" height="100%" selectionChange="lstTEntrega_selectionChangeHandler(event)" dataProvider="{CatalogoFactory.getInstance().entrega}" enabled="{!nuevo}">
						<s:columns>
							<s:ArrayList>
								<s:GridColumn headerText="Código" width="55" dataField="codigo"/>
								<s:GridColumn headerText="Nombre" dataField="nombre"/>
							</s:ArrayList>
						</s:columns>
					</s:DataGrid>
				</s:BorderContainer>
				
				<s:controlBarContent>
					<s:HGroup width="100%" horizontalAlign="right" paddingBottom="5" paddingRight="5" paddingTop="5">
						<s:Button id="cmdNueva" click="cmdNueva_clickHandler(event)" label="Nueva" enabled="{!nuevo}" styleName="nuevaButton16"/>
						<s:Button id="cmdBorrar" click="cmdBorrar_clickHandler(event)" label="Borrar" enabled="{entregaActual != null &amp;&amp; !nuevo}" styleName="borrarButton16"/>
					</s:HGroup>
				</s:controlBarContent>
			</s:Panel>

			<s:Panel width="100%" height="100%" backgroundAlpha=".5" borderColor="#CEBFBF"
					 borderVisible="true" dropShadowVisible="false" title="{entregaActual ? entregaActual.nombre : ''}">
				<s:BorderContainer width="100%" height="100%" backgroundAlpha=".06" backgroundColor="#6E87B5" borderAlpha="0">
					<s:layout>
						<s:VerticalLayout />
					</s:layout>
					<s:Form width="100%">
						<s:layout>
							<s:FormLayout gap="-12" />
						</s:layout>
						<s:FormItem label="Código">
							<s:TextInput id="txtCodigo" width="100" textAlign="left" text="@{entregaActual.codigo}" enabled="{nuevo}"/>
						</s:FormItem>
						<s:FormItem width="100%" label="Nombre">
							<s:TextInput id="txtNombre" width="100%" textAlign="left" text="@{entregaActual.nombre}" />
						</s:FormItem>
						<s:FormItem label="Relevancia">
							<s:DropDownList id="ddlRelevancia" width="100" textAlign="left" labelField="label" dataProvider="{myDP}" selectedIndex="1" />
						</s:FormItem>
						<s:Spacer height="40" />
						<s:FormItem label="Costo">
							<s:HGroup verticalAlign="middle">
								<s:TextInput id="txtCosto" width="100" textAlign="right" text="@{entregaActual.costo}" restrict="0-9" />
								<s:Label text="Dólares" />
							</s:HGroup>
						</s:FormItem>
					</s:Form>
					<s:Spacer height="100%" />
					<s:BorderContainer id="msgBox" width="100%" visible="false" includeInLayout="false" backgroundColor="0x333333">
						<s:layout>
							<s:HorizontalLayout paddingTop="10" paddingBottom="5" horizontalAlign="center"/>
						</s:layout>
						<s:Label id="msgLabel" text="" width="100%" color="white" maxDisplayedLines="1" fontSize="14" fontWeight="normal" textAlign="center" paddingBottom="5"/>
					</s:BorderContainer>
				</s:BorderContainer>
				<s:controlBarContent>
					<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle" paddingBottom="5" paddingRight="5" paddingTop="5">
						<mx:Image id="loader1" source="@Embed(source='assets/general/logo_oscuro.gif')" alpha=".5" scaleX=".20" scaleY=".20" />

						<s:Spacer width="100%" />
						<s:Button id="cmdAplicar" click="cmdAplicar_clickHandler(event)" label="Aplicar" styleName="aplicarButton16" />
						<s:Button id="cmdCancelar" click="cmdCancelar_clickHandler(event)" label="Cancelar" visible="{nuevo}" includeInLayout="{nuevo}" styleName="closeButton16"/>
						<s:Button id="cmdClose" click="cmdClose_clickHandler(event)" label="Cerrar" styleName="closeButton16" visible="{!nuevo}" includeInLayout="{!nuevo}" />

					</s:HGroup>
				</s:controlBarContent>
			</s:Panel>
		</s:HGroup>

	</s:Panel>

</s:Group>
