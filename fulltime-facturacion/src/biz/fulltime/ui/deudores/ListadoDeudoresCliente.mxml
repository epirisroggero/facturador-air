<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:components="biz.fulltime.ui.components.*" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:renderers="biz.fulltime.ui.renderers.*" xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" height="100%" initialize="group1_initializeHandler(event)">

	<fx:Script>
		<![CDATA[
			import biz.fulltime.event.AbrirFacturaEvent;
			import biz.fulltime.model.Cliente;
			import biz.fulltime.model.Moneda;
			import biz.fulltime.model.Vendedor;
			import biz.fulltime.model.deudores.DocPendientesCliente;
			import biz.fulltime.model.deudores.DocumentoDeudor;
			import biz.fulltime.ui.forms.FrmEMail;
			
			import com.hillelcoren.components.AutoComplete;
			
			import components.IconButton;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Spacer;
			import mx.controls.VRule;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.graphics.SolidColor;
			import mx.graphics.SolidColorStroke;
			import mx.managers.ISystemManager;
			import mx.managers.PopUpManager;
			
			import spark.components.BorderContainer;
			import spark.components.Label;
			import spark.components.TitleWindow;
			import spark.layouts.HorizontalAlign;
			import spark.layouts.HorizontalLayout;
			import spark.layouts.VerticalAlign;
			import spark.layouts.VerticalLayout;
			
			import util.CatalogoFactory;

			private var _dataProvider:ArrayCollection;

			private var _changeDataProvider:Boolean;
			
			private var _changeCliente:Boolean;

			[Bindable]
			private var monedas:ArrayCollection = new ArrayCollection();

			private var dateFormatter:DateFormatter = new DateFormatter();

			private var _codigoCliente:String;
			
			[Bindable]
			private var _monedaActual:Moneda;
			
			

			public function get codigoCliente():String {
				return _codigoCliente;
			}

			public function set codigoCliente(value:String):void {
				_codigoCliente = value;
				
				_changeCliente = true;
				
				invalidateProperties();

			}
			
			public function set dataProvider(data:ArrayCollection):void {
				this._dataProvider = data;
				
				_changeDataProvider = true;
				
				invalidateProperties();
				
			}
			
			var contClient:BorderContainer;

			override protected function commitProperties():void {
				super.commitProperties();

				if (_changeDataProvider && _changeCliente) {
					_changeDataProvider = false;
					_changeCliente = false;
					
					mainGroup.removeAllElements();

					if (_dataProvider != null) {						
						_dataProvider.filterFunction = filtrarPorCliente;
						_dataProvider.refresh();
						
						var container:VGroup = new VGroup();
						container.gap = -1;

						container.paddingTop = 10;
						container.paddingBottom = 0;

						mainGroup.addElement(container);

						for each (var data:DocPendientesCliente in _dataProvider) {
							var cliente:Cliente = data.cliente;

							// Crear el layout
							var vertLayout0:VerticalLayout = new VerticalLayout();
							vertLayout0.gap = -1;

							contClient = new BorderContainer();
							contClient.layout = vertLayout0;
							contClient.minHeight = 60;
							contClient.percentWidth = 100;

							var solidColor2:SolidColor = new SolidColor();
							solidColor2.color = 0xDFEDE9;

							contClient.backgroundFill = solidColor2;

							var txtCliente:String = "  Cliente:  " + cliente.codigo + " - " + cliente.nombre + " (" + cliente.contacto.ctoRSocial + ").";
							var txtVendedor:String;
							if (cliente.vendedor) {
								var vendedor:Vendedor = cliente.vendedor;
								txtVendedor = "  Vendedor: " + vendedor.codigo + " - " + vendedor.nombre;
							}
							var txtClienteData1:String = "  RUT:" + (cliente.contacto.ctoRUT ? cliente.contacto.ctoRUT : "No Tiene")  + ",  Teléfono: " + cliente.contacto.ctoTelefono + "";
							var txtClienteData2:String = "  Encargado de Pagos:" + cliente.nombre + ",  Dirección de Cobranza: " + cliente.contacto.ctoDireccion + ".";

							var lblCliente0:Label = new Label();
							lblCliente0.styleName = "clienteLabelNegrita";
							lblCliente0.percentWidth = 100;
							lblCliente0.maxDisplayedLines = 1;
							lblCliente0.text = txtCliente;

							var lblVendedor0:Label = new Label();
							lblVendedor0.styleName = "clienteLabelNegrita";
							lblVendedor0.percentWidth = 100;
							lblVendedor0.maxDisplayedLines = 1;
							lblVendedor0.text = txtVendedor;

							var lblCliente1:Label = new Label();
							lblCliente1.percentWidth = 100;
							lblCliente1.styleName = "clienteLabel";
							lblCliente1.maxDisplayedLines = 1;
							lblCliente1.text = txtClienteData1;

							var lblCliente2:Label = new Label();
							lblCliente2.percentWidth = 100;
							lblCliente2.styleName = "clienteLabel";
							lblCliente2.maxDisplayedLines = 1;
							lblCliente2.text = txtClienteData2;

							var lblClienteCategoria:Label = new Label();
							lblClienteCategoria.width = 200;
							lblClienteCategoria.styleName = "clienteLabel";
							lblClienteCategoria.maxDisplayedLines = 1;
							lblClienteCategoria.text = "Categoría: " + (cliente.categCliId == null || cliente.categCliId == "" ? "No Tiene" : cliente.categCliId);
							
							var lblClienteGrupo:Label = new Label();
							lblClienteGrupo.width = 200;
							lblClienteGrupo.styleName = "clienteLabel";
							lblClienteGrupo.maxDisplayedLines = 1;
							lblClienteGrupo.text = "Grupo: " + (cliente.grupo == null ? "No Tiene" : cliente.grupo.nombre);

							var lblClienteZona:Label = new Label();
							lblClienteZona.width = 200;
							lblClienteZona.styleName = "clienteLabel";
							lblClienteZona.maxDisplayedLines = 1;
							lblClienteZona.text = "Zona: " + (cliente.contacto.zonaIdCto == null ? "No Tiene" : cliente.contacto.zonaIdCto);

							var lblDiaHoraPagos:Label = new Label();
							lblDiaHoraPagos.width = 120;
							lblDiaHoraPagos.styleName = "clienteLabel";
							lblDiaHoraPagos.maxDisplayedLines = 1;
							if (data.diaHoraPagos) {
								lblDiaHoraPagos.text = "Día/Hora: " + data.diaHoraPagos;
							} else {
								lblDiaHoraPagos.text = "";
							}

							var vGroup:VGroup = new VGroup();
							vGroup.paddingTop = 5;
							vGroup.paddingBottom = 5;
							vGroup.percentWidth = 100;
							vGroup.percentHeight = 100;
							
							var hgRowCliente:HGroup = new HGroup();
							hgRowCliente.percentWidth = 100;
							hgRowCliente.paddingLeft = 6;
							hgRowCliente.verticalAlign = "middle";
							hgRowCliente.addElement(lblCliente0);
							hgRowCliente.addElement(lblClienteGrupo);

							var hgRow2:HGroup = new HGroup();
							hgRow2.percentWidth = 100;
							hgRow2.addElement(lblCliente1);
							hgRow2.addElement(lblClienteZona);

							var hgRow2:HGroup = new HGroup();
							hgRow2.percentWidth = 100;
							hgRow2.addElement(lblCliente1);
							hgRow2.addElement(lblClienteZona);

							var hgRow3:HGroup = new HGroup();
							hgRow3.percentWidth = 100;
							hgRow3.addElement(lblCliente2);
							hgRow3.addElement(lblClienteCategoria);

							vGroup.addElement(hgRowCliente);
							vGroup.addElement(lblVendedor0);

							vGroup.addElement(hgRow2);
							vGroup.addElement(hgRow3);

							var spacer:Spacer = new Spacer();
							spacer.height = 10;

							contClient.addElement(vGroup);

							container.addElement(spacer);
							container.addElement(contClient);

							// Crear el layout
							var vertLayout:VerticalLayout = new VerticalLayout();
							vertLayout.paddingTop = 5;
							vertLayout.paddingBottom = 5;
							vertLayout.gap = 5;

							var contClientDetalle:BorderContainer = new BorderContainer();
							contClientDetalle.styleName = "contenidoDetalle";
							contClientDetalle.layout = vertLayout;
							contClientDetalle.minHeight = 0;

							container.addElement(getHeader());
							container.addElement(contClientDetalle);


							for each (var docDeudor:DocumentoDeudor in data.documentos) {
								var fecha:String = docDeudor.fecha != null ? docDeudor.fecha : "";
								var comprobante:String = docDeudor.comprobante != null ? docDeudor.comprobante.nombre : "";
								var numero:String = String(docDeudor.numero);
								var moneda:String = docDeudor.moneda != null ? docDeudor.moneda.nombre : "";
								var facturado:String = docDeudor.facturado != null ? docDeudor.getFacturadoValue().toString() : "";
								var formaPago:String = docDeudor.planPago != null ? docDeudor.planPago.nombre : "";
								var cancelado:String = docDeudor.cancelado != null ? docDeudor.getCanceladoValue().toString() : "";
								var adeudado:String = docDeudor.adeudado != null ? docDeudor.getAdeudadoValue().toString() : "";
								var descto:String = docDeudor.getDescuentoValue().toString();
								var adeudadoNeto:String = docDeudor.adeudadoNeto != null ? docDeudor.getAdeudadoNetoValue().toString() : "";
								
								var vencida:Boolean = docDeudor.tieneCuotaVencida;

								var lblfecha:Label = new Label();
								lblfecha.width = 70;
								lblfecha.text = fecha;
								lblfecha.styleName = vencida ? "lblVencida" : "lblNoVencida";

								var lblcomprobante:Label = new Label();
								lblcomprobante.maxDisplayedLines = 1;
								lblcomprobante.width = 120;
								lblcomprobante.text = comprobante;
								lblcomprobante.styleName = vencida ? "lblVencida" : "lblNoVencida";

								var lblnumero:Label = new Label();
								lblnumero.width = 50;
								lblnumero.text = numero;
								lblnumero.maxDisplayedLines = 1;
								lblnumero.styleName = vencida ? "lblNumberVencida" : "numberLabel";

								var lblformaPago:Label = new Label();
								lblformaPago.width = 90;
								lblformaPago.maxDisplayedLines = 1;
								lblformaPago.text = formaPago;
								lblformaPago.styleName = vencida ? "lblVencida" : "lblNoVencida";


								var lblmoneda:Label = new Label();
								lblmoneda.width = 50;
								lblmoneda.maxDisplayedLines = 1;
								lblmoneda.text = moneda;
								lblmoneda.styleName = vencida ? "lblVencida" : "lblNoVencida";


								var lblfacturado:Label = new Label();
								lblfacturado.width = 90;
								lblfacturado.text = facturado;
								lblfacturado.styleName = vencida ? "lblNumberVencida" : "numberLabel";

								var lblcancelado:Label = new Label();
								lblcancelado.width = 90;
								lblcancelado.text = cancelado;
								lblcancelado.styleName = vencida ? "lblNumberVencida" : "numberLabel";

								var lbladeudado:Label = new Label();
								lbladeudado.width = 90;
								lbladeudado.text = adeudado;
								lbladeudado.styleName = vencida ? "lblNumberVencida" : "numberLabel";

								var lbldescto:Label = new Label();
								lbldescto.width = 40;
								lbldescto.text = descto;
								lbldescto.styleName = vencida ? "lblNumberVencida" : "numberLabel";

								var lbladeudadoNeto:Label = new Label();
								lbladeudadoNeto.width = 90;
								lbladeudadoNeto.text = adeudadoNeto;
								lbladeudadoNeto.styleName = vencida ? "lblNumberVencida" : "numberLabel";

								var spacer:Spacer = new Spacer();
								spacer.width = 5;

								var hGroup:HGroup = new HGroup();
								hGroup.verticalAlign = VerticalAlign.MIDDLE;
								hGroup.gap = 0;
								hGroup.addElement(lblfecha);
								hGroup.addElement(lblcomprobante);
								hGroup.addElement(lblnumero);
								hGroup.addElement(spacer);
								hGroup.addElement(lblformaPago);
								hGroup.addElement(lblmoneda);
								hGroup.addElement(lblfacturado);
								hGroup.addElement(lblcancelado);
								hGroup.addElement(lbladeudado);
								hGroup.addElement(lbldescto);
								hGroup.addElement(lbladeudadoNeto);
								
								var btnGo:IconButton = new IconButton();
								btnGo.styleName = "goButton";
								btnGo.width = 20;
								btnGo.height = 18;
								btnGo.automationName = docDeudor.docId;
								btnGo.addEventListener(MouseEvent.CLICK, function(evt:Event):void {
									var button:Button = evt.target as Button;
									dispatchEvent(new AbrirFacturaEvent(AbrirFacturaEvent.ABRIR_DOCUMENTO_CLIENTE, button.automationName));
								});
								
								hGroup.addElement(btnGo);


								contClientDetalle.addElement(hGroup);
							}
							var vertLayout1:VerticalLayout = new VerticalLayout();
							vertLayout1.gap = -1;

							var borderS:SolidColorStroke = new SolidColorStroke();
							borderS.color = 0x666666;

							var contTotal:BorderContainer = new BorderContainer();
							contTotal.layout = vertLayout1;
							contTotal.borderStroke = borderS;
							contTotal.minHeight = 0;
							contTotal.height = 35;
							contTotal.percentWidth = 100;

							var solidColor2:SolidColor = new SolidColor();
							solidColor2.color = 0xFFFFFF;

							contTotal.backgroundFill = solidColor2;

							var lblSubtotales:Label = new Label();
							lblSubtotales.width = 100;
							lblSubtotales.text = "Subtotales:";
							lblSubtotales.styleName = "subtotalLabelRight";


							var lblClienteNombre:Label = new Label();
							lblClienteNombre.width = 235;
							lblClienteNombre.text = cliente.nombre;
							lblClienteNombre.styleName = "subtotalLabelName";

							var lblMoneda:Label = new Label();
							lblMoneda.width = 50;
							lblMoneda.maxDisplayedLines = 1;
							lblMoneda.text = _monedaActual.nombre;
							lblMoneda.styleName = "subtotalLabel";

							var lblFacturado:Label = new Label();
							lblFacturado.width = 90;
							lblFacturado.text = data.getTotalFacturado(_monedaActual.codigo);
							lblFacturado.styleName = "subtotalLabelRight";

							var lblCancelado:Label = new Label();
							lblCancelado.width = 90;
							lblCancelado.text = data.getTotalCancelado(_monedaActual.codigo);
							lblCancelado.styleName = "subtotalLabelRight";

							var lblAdeudado:Label = new Label();
							lblAdeudado.width = 90;
							lblAdeudado.text = data.getTotalAdeudado(_monedaActual.codigo);
							lblAdeudado.styleName = "subtotalLabelRight";

							var lblAdeudadoNeto:Label = new Label();
							lblAdeudadoNeto.width = 130;
							lblAdeudadoNeto.text = data.getTotalAdeudadoNeto(_monedaActual.codigo);
							lblAdeudadoNeto.styleName = "subtotalLabelRight";

							var hgTotal:HGroup = new HGroup();
							hgTotal.verticalAlign = VerticalAlign.MIDDLE;
							hgTotal.gap = 0;
							hgTotal.paddingTop = 5;
							hgTotal.addElement(lblSubtotales);
							hgTotal.addElement(lblClienteNombre);
							hgTotal.addElement(lblMoneda);
							hgTotal.addElement(lblFacturado);
							hgTotal.addElement(lblCancelado);
							hgTotal.addElement(lblAdeudado);
							hgTotal.addElement(lblAdeudadoNeto);

							contTotal.addElement(hgTotal);
						}
					}

					var totalFacturado:BigDecimal = BigDecimal.ZERO;
					var totalCancelado:BigDecimal = BigDecimal.ZERO;
					var totalAdeudado:BigDecimal = BigDecimal.ZERO;
					var totalAdeudadoNeto:BigDecimal = BigDecimal.ZERO;
					;

					for each (var data:DocPendientesCliente in _dataProvider) {
						totalFacturado = totalFacturado.add(data.totalFacturado);
						totalCancelado = totalCancelado.add(data.totalCancelado);
						totalAdeudado = totalAdeudado.add(data.totalAdeudado);
						totalAdeudadoNeto = totalAdeudadoNeto.add(data.totalAdeudadoNeto);
					}

					var lblTotalMoneda:Label = new Label();
					lblTotalMoneda.width = 80;
					lblTotalMoneda.maxDisplayedLines = 1;
					lblTotalMoneda.text = _monedaActual.nombre;
					lblTotalMoneda.styleName = "totalLabelRight";

					var lblTotalFacturado:Label = new Label();
					lblTotalFacturado.width = 80;
					lblTotalFacturado.text = totalFacturado.setScale(2).toString();
					lblTotalFacturado.styleName = "totalLabelRight";

					var lblTotalCancelado:Label = new Label();
					lblTotalCancelado.width = 80;
					lblTotalCancelado.text = totalCancelado.setScale(2).toString();
					lblTotalCancelado.styleName = "totalLabelRight";

					var lblTotalAdeudado:Label = new Label();
					lblTotalAdeudado.width = 80;
					lblTotalAdeudado.text = totalAdeudado.setScale(2).toString();
					lblTotalAdeudado.styleName = "totalLabelRight";

					var lblTotalAdeudadoNeto:Label = new Label();
					lblTotalAdeudadoNeto.width = 116;
					lblTotalAdeudadoNeto.text = totalAdeudadoNeto.setScale(2).toString();
					lblTotalAdeudadoNeto.styleName = "totalLabelRight";

					var bcTotales:BorderContainer = new BorderContainer();
					bcTotales.height = 28;
					bcTotales.minHeight = 0;
					bcTotales.percentWidth = 100;

					var solidColorTotales:SolidColor = new SolidColor();
					solidColorTotales.color = 0x333333;
					bcTotales.backgroundFill = solidColorTotales;

					var lblTotales:Label = new Label();
					lblTotales.width = 110;
					lblTotales.text = "Totales:";
					lblTotales.styleName = "totalLabelLeft";

					var rule0:VRule = new VRule();
					rule0.height = 30;
					rule0.rotation = 15;
					var rule1:VRule = new VRule();
					rule1.height = 30;
					rule1.rotation = 15;
					var rule2:VRule = new VRule();
					rule2.height = 30;
					rule2.rotation = 15;
					var rule3:VRule = new VRule();
					rule3.height = 30;
					rule3.rotation = 15;
					var rule4:VRule = new VRule();
					rule4.height = 30;
					rule4.rotation = 15;

					var hgTotalFacturas:HGroup = new HGroup();
					hgTotalFacturas.percentWidth = 100;
					hgTotalFacturas.height = 22;
					hgTotalFacturas.horizontalAlign = HorizontalAlign.RIGHT;
					hgTotalFacturas.verticalAlign = VerticalAlign.MIDDLE;
					hgTotalFacturas.gap = 0;
					hgTotalFacturas.paddingTop = 2;

					hgTotalFacturas.addElement(lblTotales);
					hgTotalFacturas.addElement(rule0);
					hgTotalFacturas.addElement(lblTotalMoneda);
					hgTotalFacturas.addElement(rule4);
					hgTotalFacturas.addElement(lblTotalFacturado);
					hgTotalFacturas.addElement(rule1);
					hgTotalFacturas.addElement(lblTotalCancelado);
					hgTotalFacturas.addElement(rule2);
					hgTotalFacturas.addElement(lblTotalAdeudado);
					hgTotalFacturas.addElement(rule3);
					hgTotalFacturas.addElement(lblTotalAdeudadoNeto);
					
					var spacer22:Spacer = new Spacer();
					spacer22.width = 20;
					
					hgTotalFacturas.addElement(spacer22);


					bcTotales.addElement(hgTotalFacturas);

					var spacer:Spacer = new Spacer();
					spacer.height = 20;
					var spacer1:Spacer = new Spacer();
					spacer1.height = 10;

					container.addElement(spacer);
					container.addElement(bcTotales);
					container.addElement(spacer1);

				}
			}

			private function getHeader():BorderContainer {
				var lblCol0:Label = new Label();
				lblCol0.maxDisplayedLines = 1;
				lblCol0.width = 70;
				lblCol0.styleName = "titleLabel";
				lblCol0.text = " Fecha";

				var lblCol1:Label = new Label();
				lblCol1.maxDisplayedLines = 1;
				lblCol1.width = 120;
				lblCol1.styleName = "titleLabel";
				lblCol1.text = "Comprobante";

				var lblCol2:Label = new Label();
				lblCol2.maxDisplayedLines = 1;
				lblCol2.width = 50;
				lblCol2.styleName = "titleNumberLabel";
				lblCol2.text = "Nro.";

				var lblCol5:Label = new Label();
				lblCol5.maxDisplayedLines = 1;
				lblCol5.width = 90;
				lblCol5.styleName = "titleLabel";
				lblCol5.text = "F. Pago";

				var lblCol6:Label = new Label();
				lblCol6.maxDisplayedLines = 1;
				lblCol6.width = 50;
				lblCol6.styleName = "titleLabel";
				lblCol6.text = "Mda.";

				var lblCol7:Label = new Label();
				lblCol7.maxDisplayedLines = 1;
				lblCol7.width = 90;
				lblCol7.styleName = "titleNumberLabel";
				lblCol7.text = "Facturado";

				var lblCol8:Label = new Label();
				lblCol8.maxDisplayedLines = 1;
				lblCol8.width = 90;
				lblCol8.styleName = "titleNumberLabel";
				lblCol8.text = "Cancelado";

				var lblCol9:Label = new Label();
				lblCol9.maxDisplayedLines = 1;
				lblCol9.width = 90;
				lblCol9.styleName = "titleNumberLabel";
				lblCol9.text = "Adeudado";

				var lblCol10:Label = new Label();
				lblCol10.maxDisplayedLines = 1;
				lblCol10.width = 40;
				lblCol10.styleName = "titleNumberLabel";
				lblCol10.text = "Dcto.";

				var lblCol11:Label = new Label();
				lblCol11.maxDisplayedLines = 1;
				lblCol11.width = 90;
				lblCol11.styleName = "titleNumberLabel";
				lblCol11.text = "A. Neto";

				// Crear el layout
				var horizLayout:HorizontalLayout = new HorizontalLayout();
				horizLayout.gap = 0;
				horizLayout.paddingTop = 5;
				horizLayout.paddingBottom = 5;
				horizLayout.verticalAlign = "middle";

				var hGroup2:BorderContainer = new BorderContainer();
				hGroup2.layout = horizLayout;
				hGroup2.minHeight = 0;
				hGroup2.height = 24;

				var solidColor:SolidColor = new SolidColor();
				solidColor.color = 0x666666;
				hGroup2.backgroundFill = solidColor;

				var spacer0:Spacer = new Spacer();
				spacer0.width = 5;

				var spacer:Spacer = new Spacer();
				spacer.width = 20;

				hGroup2.addElement(lblCol0);
				hGroup2.addElement(lblCol1);
				hGroup2.addElement(lblCol2);
				hGroup2.addElement(spacer0);
				hGroup2.addElement(lblCol5);
				hGroup2.addElement(lblCol6);
				hGroup2.addElement(lblCol7);
				hGroup2.addElement(lblCol8);
				hGroup2.addElement(lblCol9);
				hGroup2.addElement(lblCol10);
				hGroup2.addElement(lblCol11);
				hGroup2.addElement(spacer);

				return hGroup2;

			}
			
			private function filtrarPorCliente(item:Object):Boolean {
				if (item == null) {
					return false;
				}
				var docPend:DocPendientesCliente = item as DocPendientesCliente;
				var cliente:String = docPend.cliente.codigo;
				
				var filtrar:Boolean = false;
				if (_codigoCliente) {
					filtrar = cliente == _codigoCliente;
				}
				return filtrar;
			}

			protected function cmbMoneda_changeHandler(event:Event):void {
				_monedaActual = cmbMoneda.selectedItem as Moneda;
				
				_changeDataProvider = true;
				_changeCliente = true;

				invalidateProperties();
			}

			public function codigoNombreLabelFunction(item:Object):String {
				var label:String;
				if (item && item.hasOwnProperty("codigo")) {
					label = item.codigo;
				}
				if (item && item.hasOwnProperty("nombre")) {
					label += " - " + item.nombre;
				}
				return label;
			}

			protected function cmdCancel_clickHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			
			protected function group1_initializeHandler(event:FlexEvent):void {
				monedas = new ArrayCollection();
				for each (var moneda:Moneda in CatalogoFactory.getInstance().monedas) {
					if (!moneda.aster) {
						monedas.addItem(moneda);
					}
				}
				
				_monedaActual = monedas.getItemAt(1) as Moneda;
			}
			
			protected function cmdEmail_clickHandler(event:MouseEvent):void	{
				var mailWindow:TitleWindow = new TitleWindow();
				mailWindow.width = 920;
				mailWindow.height = 740;
				mailWindow.title = "Enviar factura por correo";
				mailWindow.visible = true;
				
				contClient.visible = false;
				contClient.includeInLayout = false;
				invalidateProperties();
				
				
				var emailPnl:FrmEMail = new FrmEMail();
				
				var docPendCliente:DocPendientesCliente = _dataProvider.getItemAt(0) as DocPendientesCliente;
				
				emailPnl.cliente = docPendCliente.cliente; 
				emailPnl.asunto = "FULLTIME - Facturas pendientes de pago de '" + docPendCliente.cliente.nombre + "'.";
				emailPnl.takeSnapshot(mainGroup);
				emailPnl.addEventListener(CloseEvent.CLOSE, function():void {
					PopUpManager.removePopUp(mailWindow);
					mailWindow = null;
				});
				
				var parent:Sprite;
				
				var sm:ISystemManager = ISystemManager(FlexGlobals.topLevelApplication.systemManager);
				// no types so no dependencies
				var mp:Object = sm.getImplementation("mx.managers.IMarshallPlanSystemManager");
				if (mp && mp.useSWFBridge()) {
					parent = Sprite(sm.getSandboxRoot());
				} else {
					parent = Sprite(FlexGlobals.topLevelApplication);
				}
				
				PopUpManager.addPopUp(mailWindow, parent, true);
				PopUpManager.centerPopUp(mailWindow);
				
				mailWindow.addElement(emailPnl);
				mailWindow.addEventListener(CloseEvent.CLOSE, closeHandlerEmail);
				
				contClient.visible = true;
				contClient.includeInLayout = true;
				invalidateProperties();

			}				
			
			private function closeHandlerEmail(event:Event):void {
				var helpWindow:TitleWindow = event.target as TitleWindow;
				helpWindow.removeEventListener(CloseEvent.CLOSE, closeHandlerEmail);
				PopUpManager.removePopUp(helpWindow);
				helpWindow = null;
			}

			protected function cmdImprimir_clickHandler(event:MouseEvent):void {
				var pjDeudores:PrintJobDeudores = new PrintJobDeudores();
				pjDeudores.documetosPendientes = _dataProvider;
				pjDeudores.setMoneda(Moneda(cmbMoneda.selectedItem));
				pjDeudores.print();

			}
			
		]]>
	</fx:Script>

	<fx:Declarations>
		<fx:Component id="dropDownItemRenderer">
			<renderers:CodigoNombreItemRenderer />
		</fx:Component>
	</fx:Declarations>

	<s:Panel width="100%" height="100%" title="Pendientes" styleName="pnlForm" >
		<s:VGroup width="100%" height="100%" horizontalAlign="left" gap="0">
			<mx:Form>
				<mx:FormItem fontWeight="bold" label="Moneda">
					<components:MyAutoComplete id="cmbMoneda" width="160" textAlign="left" change="cmbMoneda_changeHandler(event)" dataProvider="{ monedas }" labelField="nombre"
											   matchType="anyPart" prompt="Moneda" allowNewValues="false" selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }"
											   allowDuplicates="{ false }" allowMultipleSelection="{ false }" allowEditingNewValues="{ false }" selectedItem="{_monedaActual}"
											   dropDownItemRenderer="{ dropDownItemRenderer }" labelFunction="codigoNombreLabelFunction" backspaceAction="focus" dropDownWidth="200" />

				</mx:FormItem>
			</mx:Form>
			<s:Scroller width="100%" height="100%">
				<s:HGroup id="mainGroup" horizontalAlign="center" />
			</s:Scroller>
		</s:VGroup>
		<s:controlBarContent>
			<s:HGroup width="100%" horizontalAlign="right" paddingBottom="0" paddingTop="0">
				<mx:Image id="loader1" source="@Embed(source='assets/general/logo_oscuro.gif')" alpha=".5" scaleX=".25" scaleY=".25" />
				<s:Spacer width="100%" />
				<s:Button id="cmdEmail" click="cmdEmail_clickHandler(event)" minWidth="80" styleName="eMailButton" label="eMail" toolTip="Enviar listado por correo"/>
				<s:Button id="cmdImprimir" click="cmdImprimir_clickHandler(event)" minWidth="80" styleName="imprimirButton" label="Imprimir" />
				<s:Spacer width="10" />
				<s:Button id="cmdCancel" click="cmdCancel_clickHandler(event)" minWidth="80" styleName="cancelarButton" label="Cerrar" focusEnabled="true" toolTip="Cerrar"/>
			</s:HGroup>
		</s:controlBarContent>

	</s:Panel>
</s:Group>
