<?xml version="1.0" encoding="utf-8"?>
<components1:PnlButtons xmlns:classes="com.hillelcoren.components.autoComplete.classes.*" xmlns:componentes="componentes.*" xmlns:components="biz.fulltime.ui.components.*"
						xmlns:components1="components.*" xmlns:expediciones="biz.fulltime.ui.expediciones.*" xmlns:facturacion="biz.fulltime.ui.facturacion.*" xmlns:fx="http://ns.adobe.com/mxml/2009"
						xmlns:loader="biz.fulltime.util.loader.*" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:renderers="biz.fulltime.ui.renderers.*" xmlns:s="library://ns.adobe.com/flex/spark"
						width="100%" height="100%" backgroundAlpha="0.5" creationComplete="creationCompleteHandler(event)" title="EXPEDICIONES">

	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.GeneralOptions;
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.dto.AgendaTareaDTO;
			import biz.fulltime.expediciones.AgendaTareaQuery;
			import biz.fulltime.model.AgendaTarea;
			import biz.fulltime.model.Capitulo;
			import biz.fulltime.model.Contacto;
			import biz.fulltime.model.Tarea;
			import biz.fulltime.model.Usuario;

			import com.adobe.utils.DateUtil;
			import com.hillelcoren.components.AutoComplete;

			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.core.IFlexDisplayObject;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.utils.ObjectUtil;

			import spark.components.TitleWindow;
			import spark.events.IndexChangeEvent;

			import util.CatalogoFactory;

			[Bindable]
			private var _tareas:ArrayCollection;

			[Bindable]
			private var _tareasMat:ArrayCollection;

			[Bindable]
			private var _tareasVes:ArrayCollection;

			[Bindable]
			private var catalogs:CatalogoFactory = CatalogoFactory.getInstance();

			private var frmNuevaTarea:FrmNuevaTarea;

			private var remObj:RemoteObject;

			[Bindable]
			private var _enabledButtons:Boolean = true;

			[Bindable]
			private var _cargando:Boolean = true;

			private var _iniciando:Boolean = true;

			private const WINDOW_WIDTH:Number = 800;

			private const WINDOW_HEIGHT:Number = 640;


			protected function creationCompleteHandler(event:FlexEvent):void {
				remObj = new RemoteObject();
				remObj.destination = "CreatingRpc";
				remObj.channelSet = ServerConfig.getInstance().channelSet;
				remObj.showBusyCursor = true;
				remObj.addEventListener(ResultEvent.RESULT, onResult);
				remObj.addEventListener(FaultEvent.FAULT, onFault);

				callLater(function():void {
						txtDate.selectedDate = new Date();

						moverseA(txtDate.selectedDate);

					});
				addEventListener(IndexChangeEvent.CHANGE, changeSelectedItem);

				cmbTarea.dataProvider = CatalogoFactory.getInstance().tareas;

			}

			private var _selectedIndex:int = 0;

			private function changeSelectedItem(event:IndexChangeEvent):void {
				var index:Number = event.newIndex;

				if (index == 0) {
					currentState = "default";
				} else if (index == 1) {
					currentState = "advanced";
				} else {
					currentState = "supervisar";
				}

				_selectedIndex = index;
			}


			private function onResult(event:ResultEvent):void {
				_tareas = event.result as ArrayCollection;

				_tareasMat = new ArrayCollection();
				_tareasVes = new ArrayCollection();

				for each (var tarea:AgendaTareaDTO in _tareas) {
					var hours:int = tarea.fechaHora.hours;
					if (hours < 14) {
						_tareasMat.addItem(tarea);
					} else {
						_tareasVes.addItem(tarea);
					}
				}
				if (_iniciando) {
					_iniciando = false;
				}
				_cargando = false;
			}

			private function onFault(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
				_cargando = false;
			}

			public function refrescar():void {
			}

			protected function cmdCancel_clickHandler(event:MouseEvent):void {
				dispatchEvent(new Event("_close_expediciones"));
			}

			protected function cmdImprimir_clickHandler(event:MouseEvent):void {
				if (currentState == "advanced") {
					imprimirModoAvanzado();
				} else {
					imprimirModoNormal();
				}
			}

			private function imprimirModoAvanzado():void {
				var pjTareas:PrintJobTareasAvanzado = new PrintJobTareasAvanzado();

				var tareas:ArrayCollection = new ArrayCollection();

				var tareasPendientes:ArrayCollection = new ArrayCollection();
				for each (var tarea:AgendaTareaDTO in frmAvanzado.tareas) {
					if (tarea.estado == "P") {
						tareasPendientes.addItem(tarea);
					}
				}
				for each (var t:AgendaTareaDTO in tareasPendientes) {
					if (t.selected) {
						tareas.addItem(t);
					}
				}
				if (tareas.length == 0) {
					tareas.addAll(tareasPendientes);
				}
				pjTareas.tareas = tareas;

				try {
					pjTareas.imprimirTareas();

				} catch (e:Error) {
					Alert.show(e.toString(), "Error");

				}
			}

			private function imprimirModoNormal():void {
				var wndImprimirTareas:TitleWindow = new TitleWindow();
				wndImprimirTareas.title = "Imprimir Expediciones";

				var frmImprimir:FrmImprimirExpediciones = new FrmImprimirExpediciones();
				frmImprimir.addEventListener(CloseEvent.CLOSE, function():void {
						wndImprimirTareas.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndImprimirTareas as IFlexDisplayObject);
					});

				var _matutinas:ArrayCollection = new ArrayCollection();
				var _vespertinas:ArrayCollection = new ArrayCollection();

				for each (var tareaM:AgendaTareaDTO in _tareasMat) {
					if (tareaM.estado == "P") {
						_matutinas.addItem(tareaM);
					}
				}
				for each (var tareaV:AgendaTareaDTO in _tareasVes) {
					if (tareaV.estado == "P") {
						_vespertinas.addItem(tareaV);
					}
				}
				frmImprimir.tareasMat = _matutinas;
				frmImprimir.tareasVes = _vespertinas;

				frmImprimir.fecha = txtDate.selectedDate;

				wndImprimirTareas.addElement(frmImprimir);

				PopUpManager.addPopUp(wndImprimirTareas, this, false);
				PopUpManager.centerPopUp(wndImprimirTareas);

				wndImprimirTareas.addEventListener(CloseEvent.CLOSE, closeHandler);
			}

			public function codigoNombreLabelFunction(item:Object):String {
				var label:String;
				if (item && item.hasOwnProperty("codigo")) {
					label = item.codigo;
				}
				if (item && item.hasOwnProperty("nombre")) {
					label += " - " + item.nombre;
				}
				if (item && item.hasOwnProperty("ctoRSocial")) {
					label += " [" + item.ctoRSocial + "] ";
				}

				return label;
			}

			protected function cmdNuevaTareaM_clickHandler(event:MouseEvent):void {
				var wndAltaTarea:TitleWindow = new TitleWindow();
				wndAltaTarea.title = "Creaci칩n Tarea - Ma침ana";
				wndAltaTarea.width = 640;
				wndAltaTarea.height = 600;

				frmNuevaTarea = new FrmNuevaTarea();
				frmNuevaTarea.nueva = true;
				frmNuevaTarea.matutina = true;
				frmNuevaTarea.fecha = txtDate.selectedDate;

				frmNuevaTarea.addEventListener(CloseEvent.CLOSE, function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
					});

				frmNuevaTarea.addEventListener("_savedOk", function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
						moverseA(txtDate.selectedDate);
					});


				PopUpManager.addPopUp(wndAltaTarea, this, false);
				PopUpManager.centerPopUp(wndAltaTarea);

				wndAltaTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				wndAltaTarea.addElement(frmNuevaTarea);
			}

			protected function cmdNuevaTareaT_clickHandler(event:MouseEvent):void {
				var wndAltaTarea:TitleWindow = new TitleWindow();
				wndAltaTarea.title = "Creaci칩n Tarea - Tarde";
				wndAltaTarea.width = WINDOW_WIDTH;
				wndAltaTarea.height = WINDOW_HEIGHT;

				frmNuevaTarea = new FrmNuevaTarea();
				frmNuevaTarea.nueva = true;
				frmNuevaTarea.matutina = false;
				frmNuevaTarea.fecha = txtDate.selectedDate;

				PopUpManager.addPopUp(wndAltaTarea, this, false);
				PopUpManager.centerPopUp(wndAltaTarea);

				wndAltaTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmNuevaTarea.addEventListener(CloseEvent.CLOSE, function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
					});

				frmNuevaTarea.addEventListener("_savedOk", function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
						moverseA(txtDate.selectedDate);
					});

				wndAltaTarea.addElement(frmNuevaTarea);

			}

			private function closeHandler(event:Event):void {
				var ttlWnd:TitleWindow = event.target as TitleWindow;
				ttlWnd.removeEventListener(CloseEvent.CLOSE, closeHandler);
				PopUpManager.removePopUp(ttlWnd as IFlexDisplayObject);
			}

			protected function cmdMover_clickHandler(event:MouseEvent):void {
				//var agendaTarea:AgendaTarea = dgMatutinas.grid.selectedItem as AgendaTarea;
				moverseA(txtDate.selectedDate);
			}

			protected function cmdEditarTareaM_clickHandler(event:MouseEvent):void {
				var wndAltaTarea:TitleWindow = new TitleWindow();
				wndAltaTarea.title = "Editar Tarea - Ma침ana";
				wndAltaTarea.width = WINDOW_WIDTH;
				wndAltaTarea.height = WINDOW_HEIGHT;

				var tarea:AgendaTarea = dgMatutinas.currentSelected as AgendaTarea;

				var frmNuevaTarea:FrmNuevaTarea = new FrmNuevaTarea();
				frmNuevaTarea.nueva = false;
				frmNuevaTarea.tarea = tarea;
				frmNuevaTarea.matutina = true;

				PopUpManager.addPopUp(wndAltaTarea, this, false);
				PopUpManager.centerPopUp(wndAltaTarea);

				wndAltaTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmNuevaTarea.addEventListener(CloseEvent.CLOSE, function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);

					});

				frmNuevaTarea.addEventListener("_savedOk", function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
						moverseA(txtDate.selectedDate);
					});

				wndAltaTarea.addElement(frmNuevaTarea);
			}

			protected function cmdEditarTareaT_clickHandler(event:MouseEvent):void {
				var wndAltaTarea:TitleWindow = new TitleWindow();
				wndAltaTarea.title = "Editar Tarea - Tarde";
				wndAltaTarea.width = WINDOW_WIDTH;
				wndAltaTarea.height = WINDOW_HEIGHT;

				var tarea:AgendaTarea = dgVespertinas.currentSelected as AgendaTarea;

				var frmNuevaTarea:FrmNuevaTarea = new FrmNuevaTarea();
				frmNuevaTarea.nueva = false;
				frmNuevaTarea.tarea = tarea;
				frmNuevaTarea.matutina = false;

				PopUpManager.addPopUp(wndAltaTarea, this, false);
				PopUpManager.centerPopUp(wndAltaTarea);

				wndAltaTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmNuevaTarea.addEventListener(CloseEvent.CLOSE, function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
					});

				frmNuevaTarea.addEventListener("_savedOk", function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
						moverseA(txtDate.selectedDate);
					});

				wndAltaTarea.addElement(frmNuevaTarea);

			}

			private function formatDate(item:Object, column:AdvancedDataGridColumn):String {
				return dt.format(item[column.dataField]);
			}

			protected function cmdReagendarM_clickHandler(event:MouseEvent):void {
				var wndReagendarTarea:TitleWindow = new TitleWindow();
				wndReagendarTarea.title = "Reagendar Tarea";
				wndReagendarTarea.width = WINDOW_WIDTH;
				wndReagendarTarea.height = WINDOW_HEIGHT - 140;

				var tarea:AgendaTarea = dgMatutinas.currentSelected as AgendaTarea;

				var frmReagendarTarea:FrmReagendarTareas = new FrmReagendarTareas();
				frmReagendarTarea.tarea = tarea;
				frmReagendarTarea.matutino = true;

				PopUpManager.addPopUp(wndReagendarTarea, this, false);
				PopUpManager.centerPopUp(wndReagendarTarea);

				wndReagendarTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmReagendarTarea.addEventListener(CloseEvent.CLOSE, function():void {
						wndReagendarTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndReagendarTarea as IFlexDisplayObject);

						if (!frmReagendarTarea.cancelPressed) {
							var nuevaFecha:Date = frmReagendarTarea.nuevaFecha;
							txtDate.selectedDate = nuevaFecha;
							moverseA(nuevaFecha);
						}
					});

				wndReagendarTarea.addElement(frmReagendarTarea);
			}

			protected function cmdReagendarT_clickHandler(event:MouseEvent):void {
				var wndReagendarTarea:TitleWindow = new TitleWindow();
				wndReagendarTarea.title = "Reagendar Tarea";
				wndReagendarTarea.width = WINDOW_WIDTH;
				wndReagendarTarea.height = WINDOW_HEIGHT - 140;

				var tarea:AgendaTarea = dgVespertinas.currentSelected as AgendaTarea;

				var frmReagendarTarea:FrmReagendarTareas = new FrmReagendarTareas();
				frmReagendarTarea.tarea = tarea;
				frmReagendarTarea.matutino = false;

				PopUpManager.addPopUp(wndReagendarTarea, this, false);
				PopUpManager.centerPopUp(wndReagendarTarea);

				wndReagendarTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmReagendarTarea.addEventListener(CloseEvent.CLOSE, function():void {
						wndReagendarTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndReagendarTarea as IFlexDisplayObject);

						if (!frmReagendarTarea.cancelPressed) {
							var nuevaFecha:Date = frmReagendarTarea.nuevaFecha;
							txtDate.selectedDate = nuevaFecha;
							moverseA(nuevaFecha);
						}
					});
				wndReagendarTarea.addElement(frmReagendarTarea);
			}

			protected function txtDate_changeHandler(event:CalendarLayoutChangeEvent):void {
				var nuevaFecha:Date = event.newDate;

				moverseA(nuevaFecha);
			}

			public function moverseA(nuevaFecha:Date):void {
				nuevaFecha.hours = 23;
				nuevaFecha.minutes = 59;
				nuevaFecha.seconds = 59;

				var fechaHoy:Date = new Date();

				_enabledButtons = ObjectUtil.dateCompare(nuevaFecha, fechaHoy) >= 0;

				if (ObjectUtil.dateCompare(nuevaFecha, fechaHoy) == -1) {
					cmdNuevaTareaM.enabled = false;
					cmdNuevaTareaT.enabled = false;
				} else {
					cmdNuevaTareaM.enabled = true;
					cmdNuevaTareaT.enabled = true;
				}

				if (nuevaFecha.date == fechaHoy.date && nuevaFecha.month == fechaHoy.month && nuevaFecha.fullYear == fechaHoy.fullYear) {
					if (fechaHoy.hours > 12) {
						cmdNuevaTareaM.enabled = false;
					}
				}

				nuevaFecha.hours = 18;

				var query:AgendaTareaQuery = new AgendaTareaQuery();

				var tareas:ArrayCollection = cmbTarea.selectedItems;
				var selectedTareas:ArrayCollection = new ArrayCollection();
				for each (var itemT:Tarea in tareas) {
					selectedTareas.addItem(itemT.codigo);
				}

				var capitulo:Capitulo = cmbCapitulo.selectedItem as Capitulo;
				if (capitulo) {
					if (tareas.length == 0) {
						query.capituloId = capitulo.codigo;
					} else {
						query.tareas = selectedTareas;
					}
				} else {
					query.tareas = selectedTareas;
				}

				var contacto:Contacto = cmbContacto.selectedItem;
				query.contacto = contacto ? contacto.codigo : null;
				query.fecha = com.adobe.utils.DateUtil.getUTCDate(nuevaFecha);

				var selectedUsuarios:ArrayCollection = new ArrayCollection();

				if (chbMisAsignados.selected) {
					selectedUsuarios.addItem(GeneralOptions.getInstance().loggedUser.codigo)
				} else {
					var usuarios:ArrayCollection = cmbUsuarioAsignado.selectedItems;
					if (chbMisAsignados.selected) {
						selectedUsuarios.addItem(GeneralOptions.getInstance().loggedUser.codigo);
					} else {
						for each (var item:Usuario in usuarios) {
							selectedUsuarios.addItem(item.codigo);
						}
					}
				}
				query.usuarios = selectedUsuarios;

				_cargando = true

				remObj.queryTareas(query);
			}

			private function compareDates(date1:Date, date2:Date):void {
				if (ObjectUtil.dateCompare(date1, date2) > -1) {
					Alert.show(date2 + " is before " + date1);
				} else if (ObjectUtil.dateCompare(date1, date2) == 0) {
					Alert.show(date1 + " and " + date2 + " are equal");
				} else {
					Alert.show(date1 + " is before " + date2);
				}
			}

			protected function cmdPrevious_clickHandler(event:MouseEvent):void {
				var nuevaFecha:Date = util.DateUtil.clone(txtDate.selectedDate).subtract(util.DateUtil.DAY, 1).datetime;

				txtDate.selectedDate = nuevaFecha;
				moverseA(txtDate.selectedDate);
			}

			protected function cmdNext_clickHandler(event:MouseEvent):void {
				var nuevaFecha:Date = util.DateUtil.clone(txtDate.selectedDate).add(util.DateUtil.DAY, 1).datetime;

				txtDate.selectedDate = nuevaFecha;
				moverseA(txtDate.selectedDate);
			}

			protected function cmbUsuarioAsignado_changeHandler(event:Event):void {
				moverseA(txtDate.selectedDate);
			}

			protected function cmdFechaHoy_clickHandler(event:MouseEvent):void {
				txtDate.selectedDate = new Date();
				moverseA(txtDate.selectedDate);
			}

			protected function cmbTarea_changeHandler(event:Event):void {
				moverseA(txtDate.selectedDate);
			}

			protected function cmbTarea_keyDownHandler(event:KeyboardEvent):void {
			}

			protected function cmdMoverManana_clickHandler(event:MouseEvent):void {
				var tareasM:ArrayCollection = new ArrayCollection();
				for each (var tarea:AgendaTareaDTO in _tareasMat) {
					if (tarea.selected) {
						tareasM.addItem(tarea);
					}
				}
				var remObjMod:RemoteObject = new RemoteObject();
				remObjMod.destination = "CreatingRpc";
				remObjMod.channelSet = ServerConfig.getInstance().channelSet;
				remObjMod.showBusyCursor = true;
				remObjMod.addEventListener(ResultEvent.RESULT, function():void {
						trace(" Se modificaron correctamente las tareas seleccionadas.");
						moverseA(txtDate.selectedDate);
					});
				remObjMod.addEventListener(FaultEvent.FAULT, onFault);
				remObjMod.modificarTareas(tareasM, false);
			}

			protected function cmdMoverTarde_clickHandler(event:MouseEvent):void {
				var tareasV:ArrayCollection = new ArrayCollection();
				for each (var tarea:AgendaTareaDTO in _tareasVes) {
					if (tarea.selected) {
						tareasV.addItem(tarea);
					}
				}

				var remObjMod:RemoteObject = new RemoteObject();
				remObjMod.destination = "CreatingRpc";
				remObjMod.channelSet = ServerConfig.getInstance().channelSet;
				remObjMod.showBusyCursor = true;
				remObjMod.addEventListener(ResultEvent.RESULT, function():void {
						trace(" Se MODIFICARON correctamente las tareas seleccionadas.");
						moverseA(txtDate.selectedDate);
					});
				remObjMod.addEventListener(FaultEvent.FAULT, onFault);
				remObjMod.modificarTareas(tareasV, true);
			}

			protected function cmdDetalleTareaM_clickHandler(event:MouseEvent):void {
				var wndTarea:TitleWindow = new TitleWindow();
				wndTarea.title = "Detalle Tarea Finalizada";
				wndTarea.width = WINDOW_WIDTH;
				wndTarea.height = WINDOW_HEIGHT;

				var tarea:AgendaTarea = dgMatutinas.currentSelected as AgendaTarea;

				var frmTarea:FrmDetalleTarea = new FrmDetalleTarea();
				frmTarea.tarea = tarea;

				PopUpManager.addPopUp(wndTarea, this, false);
				PopUpManager.centerPopUp(wndTarea);

				wndTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmTarea.addEventListener(CloseEvent.CLOSE, function():void {
						wndTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndTarea as IFlexDisplayObject);

					});

				wndTarea.addElement(frmTarea);

			}

			protected function cmdDetalleTareaT_clickHandler(event:MouseEvent):void {
				var wndTarea:TitleWindow = new TitleWindow();
				wndTarea.title = "Detalle Tarea Finalizada";
				wndTarea.width = WINDOW_WIDTH;
				wndTarea.height = WINDOW_HEIGHT;

				var tarea:AgendaTarea = dgVespertinas.currentSelected as AgendaTarea;

				var frmTarea:FrmDetalleTarea = new FrmDetalleTarea();
				frmTarea.tarea = tarea;

				PopUpManager.addPopUp(wndTarea, this, false);
				PopUpManager.centerPopUp(wndTarea);

				wndTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmTarea.addEventListener(CloseEvent.CLOSE, function():void {
						wndTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndTarea as IFlexDisplayObject);

					});

				wndTarea.addElement(frmTarea);
			}

			protected function chbTaresPendientes(event:Event):void {
				// TODO Auto-generated method stub
			}

			protected function cmdRefrescar_clickHandler(event:MouseEvent):void {
				moverseA(txtDate.selectedDate);
			}

			protected function cmbCapitulo_changeHandler(event:Event):void {
				var selectedItem:Capitulo = cmbCapitulo.selectedItem as Capitulo;

				var tareas:ArrayCollection = new ArrayCollection();
				for each (var tarea:Tarea in CatalogoFactory.getInstance().tareas) {
					if (selectedItem == null || tarea.capituloId == selectedItem.codigo) {
						tareas.addItem(tarea);
					}
				}
				cmbTarea.clear();
				cmbTarea.selectedItems = new ArrayCollection();
				cmbTarea.dataProvider = tareas;

				callLater(function():void {
						moverseA(txtDate.selectedDate);
					});
			}

			protected function cmbContacto_keyDownHandler(event:KeyboardEvent):void {
			}

			protected function cmbContacto_changeHandler(event:Event):void {
				moverseA(txtDate.selectedDate);
			}

			protected function chbMisAsignados_changeHandler(event:Event):void {
				moverseA(txtDate.selectedDate);
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<fx:Component id="dropDownItemRenderer">
			<renderers:CodigoNombreItemRenderer />
		</fx:Component>
		<mx:DateFormatter id="dt" formatString="H:NN" />
	</fx:Declarations>

	<fx:Declarations>
		<mx:DateFormatter id="dateFormatter" formatString="EEEE, DD de MMMM de YYYY" />
	</fx:Declarations>

	<components1:states>
		<s:State name="default" />
		<s:State name="advanced" />
		<s:State name="supervisar" />
	</components1:states>

	<s:VGroup width="100%" height="100%" gap="-1" includeIn="advanced">
		<expediciones:FrmBuscarExpediciones id="frmAvanzado" />
	</s:VGroup>

	<s:VGroup width="100%" height="100%" gap="-1" includeIn="supervisar">
		<expediciones:FrmSupervision id="frmSupervision" />
	</s:VGroup>

	<s:VGroup width="100%" height="100%" gap="-1" includeIn="default">
		<s:HGroup width="100%" paddingLeft="20" paddingRight="10" paddingTop="10" verticalAlign="middle">
			<s:Label textAlign="right" text="Fecha" />
			<mx:DateField id="txtDate" fontFamily="Helvetica" fontSize="14" change="txtDate_changeHandler(event)" selectedDate="{new Date()}" yearNavigationEnabled="true" />

			<s:HGroup horizontalAlign="center" paddingLeft="20" paddingRight="40" verticalAlign="middle">
				<components1:IconButton id="cmdPrevious" width="24" height="24" cornerRadius="6" click="cmdPrevious_clickHandler(event)" styleName="previousButton" focusEnabled="false"
										toolTip="D칤a anterior" />
				<s:Button id="cmdFechaHoy" click="cmdFechaHoy_clickHandler(event)" label="Hoy" toolTip="Ir al d칤a de hoy" focusEnabled="false" styleName="textButton" />
				<components1:IconButton id="cmdNext" width="24" height="24" cornerRadius="6" click="cmdNext_clickHandler(event)" styleName="nextButton" toolTip="D칤a siguiente" focusEnabled="false" />

				<s:Spacer width="8" />
				<s:Button id="cmdRefrescar" click="cmdRefrescar_clickHandler(event)" label="Refrescar" toolTip="Refrescar" focusEnabled="false" styleName="refrescarButton16" />


				<s:Spacer width="8" />
				<s:BorderContainer width="160" backgroundAlpha=".16" backgroundColor="#6E87B5" borderAlpha="0.5" minHeight="0">
					<s:layout>
						<s:VerticalLayout horizontalAlign="center" paddingBottom="5" paddingLeft="20" paddingRight="20" paddingTop="5" verticalAlign="middle" />
					</s:layout>
					<s:CheckBox id="chbPendientes" label="Pendientes" selected="true" />
				</s:BorderContainer>
				<s:BorderContainer width="160" backgroundAlpha=".16" backgroundColor="#6E87B5" borderAlpha="0.5" minHeight="0">
					<s:layout>
						<s:VerticalLayout horizontalAlign="center" paddingBottom="5" paddingLeft="20" paddingRight="20" paddingTop="5" verticalAlign="middle" />
					</s:layout>
					<s:CheckBox id="chbMisAsignados" change="chbMisAsignados_changeHandler(event)" label="Mis asignadas" selected="true" />
				</s:BorderContainer>
			</s:HGroup>
			<s:Spacer width="100%" />
			<s:Label fontSize="14" text="{dateFormatter.format(txtDate.selectedDate)}" />

		</s:HGroup>

		<s:HGroup width="100%" paddingBottom="10" paddingLeft="20" paddingRight="10" paddingTop="10" verticalAlign="top">
			<s:VGroup width="170" gap="0">
				<s:Label width="100%" paddingTop="5" textAlign="left" text="츼rea" />
				<components:MyAutoComplete id="cmbCapitulo" width="100%" textAlign="left" change="cmbCapitulo_changeHandler(event)" dataProvider="{ catalogs.capitulos }" labelField="nombre"
										   matchType="anyPart" prompt="Filtrar por 치rea" allowNewValues="false" selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="false"
										   allowMultipleSelection="false" allowEditingNewValues="false" dropDownItemRenderer="{ dropDownItemRenderer }" backspaceAction="focus" dropDownRowCount="5" />
			</s:VGroup>

			<s:VGroup width="240" gap="0">
				<s:Label width="100%" paddingTop="5" textAlign="left" text="Tareas" />
				<components:MyAutoComplete id="cmbTarea" width="100%" textAlign="left" change="cmbTarea_changeHandler(event)" keyDown="cmbTarea_keyDownHandler(event)"
										   dataProvider="{ catalogs.tareas }" labelField="nombre" matchType="anyPart" prompt="Filtrar por tareas" allowNewValues="false"
										   selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="false" allowMultipleSelection="true" allowEditingNewValues="false"
										   dropDownItemRenderer="{ dropDownItemRenderer }" labelFunction="codigoNombreLabelFunction" backspaceAction="remove" dropDownRowCount="10" maxHeight="72" />
			</s:VGroup>

			<s:Spacer width="20" />
			<s:VGroup width="240" gap="0">
				<s:Label width="100%" paddingTop="5" textAlign="left" text="Asignados" />
				<components:MyAutoComplete id="cmbUsuarioAsignado" width="100%" textAlign="left" change="cmbUsuarioAsignado_changeHandler(event)" dataProvider="{ catalogs.usuarios }"
										   labelField="nombre" matchType="anyPart" prompt="Filtrar por usuario asignado" allowNewValues="false" selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }"
										   allowDuplicates="{ false }" allowMultipleSelection="{ true }" allowEditingNewValues="{ false }" dropDownItemRenderer="{ dropDownItemRenderer }"
										   labelFunction="codigoNombreLabelFunction" backspaceAction="focus" dropDownWidth="320" dropDownRowCount="10" enabled="{!chbMisAsignados.selected}" />
			</s:VGroup>

			<s:VGroup width="240" gap="0">
				<s:Label width="100%" paddingTop="5" textAlign="left" text="Contacto" />
				<components:MyAutoComplete id="cmbContacto" width="100%" textAlign="left" change="cmbContacto_changeHandler(event)" keyDown="cmbContacto_keyDownHandler(event)"
										   dataProvider="{ catalogs.getContactosActivos() }" labelField="nombre" matchType="anyPart" prompt="Filtrar por contacto" allowNewValues="false"
										   selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="false" allowMultipleSelection="false" allowEditingNewValues="false"
										   dropDownItemRenderer="{ dropDownItemRenderer }" labelFunction="codigoNombreLabelFunction" backspaceAction="focus" dropDownWidth="320" dropDownRowCount="10" />
			</s:VGroup>

		</s:HGroup>

		<s:Group width="100%" height="100%">
			<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" visible="{_cargando}">
				<loader:LoadComponent />
			</s:VGroup>

			<s:VGroup width="100%" height="100%" visible="{!_cargando}">
				<components1:PanelShowHide id="pshTareasManana" width="100%" height="100%" title="Tareas para la Ma침ana" styleName="pnlInterno" defaultHeight="-1" minHeight="0">
					<s:HGroup width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="5" paddingTop="0">
						<expediciones:ExpedicionesDataGrid id="dgMatutinas" tareas="{_tareasMat}" turno="{ExpedicionesDataGrid.TURNO_MATUTINO}" mostrarSoloPendientes="{chbPendientes.selected}"
														   showDateColumn="false" />
						<s:BorderContainer width="110" height="100%" backgroundColor="0xF6F6F6" borderAlpha="0">
							<s:layout>
								<s:VerticalLayout paddingLeft="5" paddingRight="5" paddingTop="30" verticalAlign="top" />
							</s:layout>
							<s:Button id="cmdNuevaTareaM" width="100%" click="cmdNuevaTareaM_clickHandler(event)" label="Nueva" toolTip="Agregar una nueva tarea para la Ma침ana" styleName="nuevaButton"
									  focusEnabled="false" />
							<s:Button id="cmdEditarTareaM" width="100%" click="cmdEditarTareaM_clickHandler(event)" label="Editar" toolTip="Editar tarea seleccionada"
									  visible="{dgMatutinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgMatutinas.grid.selectedItem).estado == 'P'}"
									  includeInLayout="{dgMatutinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgMatutinas.grid.selectedItem).estado == 'P'}" styleName="editarButton"
									  focusEnabled="false" />
							<s:Button id="cmdDetalleTareaM" width="100%" click="cmdDetalleTareaM_clickHandler(event)" label="Ver detalles" toolTip="Ver detalle tarea finalizada"
									  visible="{dgMatutinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgMatutinas.grid.selectedItem).estado == 'C'}"
									  includeInLayout="{dgMatutinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgMatutinas.grid.selectedItem).estado == 'C'}" styleName="editarButton"
									  focusEnabled="false" />
							<s:Spacer height="5" />
							<s:Button id="cmdReagendarM" width="100%" click="cmdReagendarM_clickHandler(event)" label="Reagendar" toolTip="Reagendar tarea"
									  enabled="{dgMatutinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgMatutinas.grid.selectedItem).estado == 'P'}" styleName="textButton" focusEnabled="false" />
						</s:BorderContainer>
					</s:HGroup>
				</components1:PanelShowHide>
				<s:HGroup width="100%" height="32" horizontalAlign="center" verticalAlign="middle" minHeight="32" maxHeight="32"
						  visible="{pshTareasManana.height > 30 &amp;&amp; pshTareasTarde.height > 30 }" includeInLayout="{pshTareasManana.height > 30 &amp;&amp; pshTareasTarde.height > 30}">
					<s:Button id="cmdMoverManana" width="24" height="24" cornerRadius="6" click="cmdMoverManana_clickHandler(event)" toolTip="Pasar elementos seleccionados arriba a la tarde"
							  styleName="nextButton" focusEnabled="false" rotation="90" />
					<s:Button id="cmdMoverTarde" width="24" height="24" cornerRadius="6" click="cmdMoverTarde_clickHandler(event)" toolTip="Pasar elementos seleccionados abajo a la ma침ana"
							  styleName="nextButton" focusEnabled="false" rotation="270" />
				</s:HGroup>
				<components1:PanelShowHide id="pshTareasTarde" width="100%" height="100%" title="Tareas para la Tarde" styleName="pnlInterno" defaultHeight="-1">
					<s:HGroup width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="5" paddingTop="0">
						<expediciones:ExpedicionesDataGrid id="dgVespertinas" tareas="{_tareasVes}" turno="{ExpedicionesDataGrid.TURNO_VESPERTINO}" mostrarSoloPendientes="{chbPendientes.selected}"
														   showDateColumn="false" />
						<s:BorderContainer width="110" height="100%" backgroundColor="0xF6F6F6" borderAlpha="0">
							<s:layout>
								<s:VerticalLayout paddingLeft="5" paddingRight="5" paddingTop="30" verticalAlign="top" />
							</s:layout>
							<s:Button id="cmdNuevaTareaT" width="100%" click="cmdNuevaTareaT_clickHandler(event)" label="Nueva" styleName="nuevaButton" toolTip="Agregar una nueva tarea para la Tarde"
									  focusEnabled="false" />
							<s:Button id="cmdEditarTareaT" width="100%" click="cmdEditarTareaT_clickHandler(event)" label="Editar"
									  visible="{dgVespertinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgVespertinas.grid.selectedItem).estado == 'P'}"
									  includeInLayout="{dgVespertinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgVespertinas.grid.selectedItem).estado == 'P'}" styleName="editarButton"
									  focusEnabled="false" />
							<s:Button id="cmdDetalleTareaT" width="100%" click="cmdDetalleTareaT_clickHandler(event)" label="Ver Detalles" toolTip="Ver detalle tarea finalizada"
									  visible="{dgVespertinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgVespertinas.grid.selectedItem).estado == 'C'}"
									  includeInLayout="{dgVespertinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgVespertinas.grid.selectedItem).estado == 'C'}" styleName="editarButton"
									  focusEnabled="false" />
							<s:Spacer height="5" />

							<s:Button id="cmdReagendarT" width="100%" click="cmdReagendarT_clickHandler(event)" label="Reagendar" toolTip="Reagendar tarea"
									  enabled="{dgVespertinas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgVespertinas.grid.selectedItem).estado == 'P'}" styleName="textButton"
									  focusEnabled="false" />
						</s:BorderContainer>
					</s:HGroup>
				</components1:PanelShowHide>
			</s:VGroup>

		</s:Group>

	</s:VGroup>

	<components1:controlBarContent>
		<s:HGroup width="100%" horizontalAlign="right" paddingBottom="0" paddingTop="0">
			<mx:Image id="loader1" source="@Embed(source='assets/general/logo_oscuro.gif')" alpha=".5" scaleX=".25" scaleY=".25" />
			<s:Spacer width="100%" />
			<s:Button id="cmdImprimir" click="cmdImprimir_clickHandler(event)" styleName="imprimirButton" label="Imprimir" focusEnabled="false" excludeFrom="supervisar" />
		</s:HGroup>
	</components1:controlBarContent>

</components1:PnlButtons>
