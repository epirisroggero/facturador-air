<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:components="components.*" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:util="biz.fulltime.util.*"
		 width="100%" height="100%" creationComplete="group1_creationCompleteHandler(event)" implements="">

	<fx:Script>
		<![CDATA[
			import biz.fulltime.model.Vendedor;
			import biz.fulltime.ui.components.HelpPnl;
			import util.CatalogoFactory;

			import mx.collections.ArrayCollection;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;

			import spark.components.gridClasses.CellPosition;

			[Bindable]
			private var _vendedores:ArrayCollection = CatalogoFactory.getInstance().vendedores;

			private var _vendedor:Vendedor;

			private var _selectedName:String = "";

			private var _filter:String;

			private var dirty:Boolean = true;


			protected override function commitProperties():void {
				super.commitProperties();

				if (dirty) {
					dgVendedores.filterReset();
					dirty = false;
				}
			}

			public function get vendedor():Vendedor {
				return _vendedor;
			}

			public function set vendedor(value:Vendedor):void {
				_vendedor = value;
			}

			private var cellPos:CellPosition;

			protected function dg_keyDownHandler(event:KeyboardEvent):void {
				cellPos = dgVendedores.selectedCell;

				if (event.keyCode == Keyboard.F1 || (event.keyCode >= Keyboard.A && event.keyCode <= Keyboard.Z) || (event.keyCode >= Keyboard.NUMBER_0 && event.keyCode <= Keyboard.NUMBER_9) || (event.keyCode >= Keyboard.NUMPAD_0 && event.keyCode <= Keyboard.NUMPAD_9)) { // Se presiono la tecla 'F1' o A-Z o 1-9
					var hlpPanel:HelpPnl = new HelpPnl();
					hlpPanel.addEventListener(CloseEvent.CLOSE, closePnlHandler);

					if (cellPos != null) {
						hlpPanel.label = GridColumn(dgVendedores.columns.getItemAt(cellPos.columnIndex)).headerText;
					} else {
						hlpPanel.label = GridColumn(dgVendedores.columns.getItemAt(0)).headerText;
					}

					PopUpManager.addPopUp(hlpPanel, this, true);
					PopUpManager.centerPopUp(hlpPanel);

				} else if (event.keyCode == Keyboard.ESCAPE) { // Se presiono la tecla 'ESC'
					if (dgVendedores.hasFilter()) {
						dgVendedores.filterReset();
					} else {
						dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
					}

				} else if (event.keyCode == Keyboard.ENTER) { // Se presiono la tecla 'ENTER'
					var rowIndex:int = dgVendedores.selectedCell.rowIndex;
					_vendedor = dgVendedores.dataProvider.getItemAt(rowIndex) as Vendedor;
					dispatchEvent(new CloseEvent(CloseEvent.CLOSE));

				}
			}


			//
			// Grid Filter. Tratar de sacar para un componente GenÃ©rico
			// 
			private function closePnlHandler(event:CloseEvent):void {
				var helpPnl:HelpPnl = HelpPnl(event.target);
				var filter:String = helpPnl.getValue();
				var colName:String = dgVendedores.columns.getItemAt(cellPos.columnIndex).dataField;

				var posX:int = cellPos.columnIndex;

				dgVendedores.filter(colName, filter, true);

				event.target.removeEventListener(CloseEvent.CLOSE, closePnlHandler);
				PopUpManager.removePopUp(event.target as IFlexDisplayObject);

				callLater(function():void {
					dgVendedores.setFocus();
					if (dgVendedores.dataProviderLength > 0) {
						dgVendedores.selectedCell = new CellPosition(0, posX);
					}

				});

			}
			/// End Grid Filter


			protected function group1_creationCompleteHandler(event:FlexEvent):void {
				callLater(function():void {
					dgVendedores.setFocus();
					dgVendedores.selectedCell = new CellPosition(0, 0);
				});
			}

			protected function cmdAceptar_clickHandler(event:MouseEvent):void {
				var rowIndex:int = dgVendedores.selectedCell.rowIndex;
				_vendedor = dgVendedores.dataProvider.getItemAt(rowIndex) as Vendedor;
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}

			protected function dgClients_doubleClickHandler(event:MouseEvent):void {
				var rowIndex:int = dgVendedores.selectedCell.rowIndex;
				_vendedor = dgVendedores.dataProvider.getItemAt(rowIndex) as Vendedor;
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<s:ArrayList id="cols">
			<s:GridColumn width="50" dataField="codigo" headerText="Cod." />
			<s:GridColumn dataField="nombre" headerText="Nombre" />
		</s:ArrayList>
	</fx:Declarations>

	<s:Panel width="100%" height="100%" styleName="pntLineasVenta">
		<s:HGroup width="100%" height="100%" gap="0">
			<util:FilteredDataGrid id="dgVendedores" width="100%" height="100%" doubleClick="dgClients_doubleClickHandler(event)" keyDown="dg_keyDownHandler(event)"
								   selectionMode="singleCell" dataProvider="{_vendedores}" borderAlpha="0" columns="{cols}" doubleClickEnabled="true"
								   >
			</util:FilteredDataGrid>
		</s:HGroup>

		<s:controlBarContent>
			<s:HGroup width="100%" horizontalAlign="right" paddingBottom="5" paddingTop="5">
				<components:IconButton id="cmdAceptar" click="cmdAceptar_clickHandler(event)" label="Aceptar" styleName="aceptarButton" />
			</s:HGroup>
		</s:controlBarContent>
	</s:Panel>

</s:Group>
