<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" height="100%">
	
	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.model.ArticuloCompraVentaCosto;
			import biz.fulltime.model.Documento;
			import biz.fulltime.model.Moneda;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import util.CatalogoFactory;
			
			private var _documento:Documento;
			
			[Bindable]
			private var dp:ArrayCollection;
			
			[Bindable]
			public function get documento():Documento {
				return _documento;
			}
			
			public function set documento(value:Documento):void {
				_documento = value;
			}
			
			public function setCostos(costos:ArrayCollection):void {
				this.dp = costos;
			}
			
			protected function cmdAplicar_clickHandler(event:MouseEvent):void {
				var remObj:RemoteObject = new RemoteObject();
				remObj.destination = "CreatingRpc";
				remObj.showBusyCursor = true;
				remObj.channelSet = ServerConfig.getInstance().channelSet;
				remObj.addEventListener(ResultEvent.RESULT, onResult);
				remObj.addEventListener(FaultEvent.FAULT, onFault);
				
				var result:ArrayCollection = new ArrayCollection();
				for each (var i:ArticuloCompraVentaCosto in dp) {
					if (i.selected) {
						result.addItem(i);	
					}					
				}			
				if (result.length > 0) {
					remObj.actualizarArticulosCompraVenta(result);
				}			
			}
			
			private function onResult(event:ResultEvent):void {
				var remObj:RemoteObject = new RemoteObject();
				remObj.destination = "CreatingRpc";
				remObj.channelSet = ServerConfig.getInstance().channelSet;
				remObj.addEventListener(ResultEvent.RESULT, verificarCostosResult);
				remObj.addEventListener(FaultEvent.FAULT, handleFault);
				remObj.showBusyCursor = true;
				
				remObj.getCompraVentaCostos(_documento);
			}
			
			public function verificarCostosResult(event:ResultEvent):void {
				this.dp = event.result as ArrayCollection;
			}
			
			private function onFault(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			
			protected function cmdCancelar_clickHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			private function handleFault(event:FaultEvent):void {
				var message:String = event.fault && event.fault.rootCause && event.fault.rootCause.localizedMessage ? event.fault.rootCause.localizedMessage : null;
				if (!message) {
					message = event.message.toString();
				}				
				Alert.show(message, "Error", 4, null, null, StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('ErrorIcon'));
			}
			
			private function numberFormat(item:Object, column:GridColumn):String {
				var monedaId:String = item[column.dataField == "costoCompra" ? "compraMonedaId" : (column.dataField == "costoVenta" ? "ventaMonedaId" : "fichaMonedaId")];
				
				for each(var moneda:Moneda in CatalogoFactory.getInstance().getMonedas(false)) {
					if (monedaId == moneda.codigo) {
						return  moneda.simbolo + " " + numberFormatter.format(item[column.dataField]);
					}
				}
				return numberFormatter.format(item [column.dataField]);
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:NumberFormatter id="numberFormatter" locale="es_ES" fractionalDigits="2"/>
	</fx:Declarations>
	
	<s:Panel width="100%" height="100%" title="ArtÃ­culos">
		<s:DataGrid id="lstPrecios" width="100%" height="100%" dataProvider="{dp}">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn width="40" dataField="selected" headerText="">
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer>
									<fx:Script>
										<![CDATA[
											import biz.fulltime.model.ArticuloCompraVentaCosto;
											
											protected function checkBox_changeHandler(event:Event):void {
												ArticuloCompraVentaCosto(data).selected = checkBox.selected;
											}
										]]>
									</fx:Script>
									
									<s:VGroup width="100%" height="100%" horizontalAlign="center" paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2" verticalAlign="middle">
										<s:CheckBox id="checkBox" x="5" y="5" verticalCenter="0" change="checkBox_changeHandler(event)" selected="{ArticuloCompraVentaCosto(data).selected}" />
									</s:VGroup>
								</s:GridItemRenderer>
								
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>

					<s:GridColumn headerText="ID PRODUCTO" dataField="codigo" width="160"/>
					<s:GridColumn headerText="NOMBRE PRODUCTO" dataField="nombre" />
					
					<s:GridColumn headerText="COSTO FICHA" dataField="costo" width="120" labelFunction="numberFormat">
						<s:itemRenderer>
							<fx:Component>
								<s:DefaultGridItemRenderer textAlign="right" />
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					<s:GridColumn headerText="COMPR. COMPRA" dataField="comprobanteCompra" width="120">
						<s:itemRenderer>
							<fx:Component>
								<s:DefaultGridItemRenderer textAlign="center" />
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					<s:GridColumn headerText="COSTO COMPRA" dataField="costoCompra" width="120" labelFunction="numberFormat">
						<s:itemRenderer>
							<fx:Component>
								<s:DefaultGridItemRenderer textAlign="right" />
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					<s:GridColumn headerText="COMPR. VENTA" dataField="comprobanteVenta" width="120">
						<s:itemRenderer>
							<fx:Component>
								<s:DefaultGridItemRenderer textAlign="center" />
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					<s:GridColumn headerText="COSTO VENTA" dataField="costoVenta" width="100" labelFunction="numberFormat">
						<s:itemRenderer>
							<fx:Component>
								<s:DefaultGridItemRenderer textAlign="right" />
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		
		<s:controlBarContent>
			<s:HGroup width="100%" horizontalAlign="right" paddingBottom="5" paddingRight="5" paddingTop="5" verticalAlign="middle">
				<mx:Image id="loader1" source="@Embed(source='assets/general/logo_oscuro.gif')" alpha=".5" scaleX=".20" scaleY=".20" />
				<s:Spacer width="100%" />
				<s:Button id="cmdAplicar" click="cmdAplicar_clickHandler(event)" label="Actualizar costo" styleName="aplicarButton16" />
				<s:Button id="cmdCancelar" click="cmdCancelar_clickHandler(event)" label="Cerrar" styleName="closeButton16" />
			</s:HGroup>
		</s:controlBarContent>
		
	</s:Panel>
	
	
</s:Group>
