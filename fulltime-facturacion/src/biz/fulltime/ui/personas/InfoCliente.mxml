<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:myComponents="biz.ideasoft.o3bpa.utils.myComponents.*" xmlns:s="library://ns.adobe.com/flex/spark"
		   width="100%" height="100%" creationComplete="init()" show="showPanel()" label="Editar cliente" horizontalScrollPolicy="off">

	<mx:Script>
		<![CDATA[
			import biz.fulltime.conf.GeneralOptions;
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.event.AbrirFacturaEvent;
			import biz.fulltime.event.ClienteEvent;
			import biz.fulltime.expediciones.AgendaTareaQuery;
			import biz.fulltime.model.Cliente;
			import biz.fulltime.model.Persona;
			import biz.fulltime.model.Usuario;
			import biz.fulltime.model.Vendedor;
			import biz.fulltime.model.deudores.DocPendientesCliente;
			import biz.fulltime.model.deudores.DocumentoDeudor;
			import biz.fulltime.ui.deudores.ListadoDeudoresCliente;
			import biz.fulltime.ui.expediciones.FrmExpedicionesClienteInfo;
			import biz.fulltime.ui.expediciones.FrmNuevaTarea;
			import biz.fulltime.ui.forms.FrmHistoricoCompras;
			
			import com.adobe.utils.StringUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import spark.components.HGroup;
			import spark.components.Label;
			import spark.components.TitleWindow;
			
			import util.CatalogoFactory;

			private var _cliente:Cliente;

			private var remFactPendientes:RemoteObject;

			private var remCotizacionesPendientes:RemoteObject;

			private const DEFAULT_WITH:Number = 100;

			[Bindable]
			private var departamento:String;
			
			[Bindable]
			private var pais:String;

			[Bindable]
			private var zona:String;

			[Bindable]
			private var giro:String;

			[Bindable]
			private var categ:String;

			[Bindable]
			private var encargadoCuenta:String;

			[Bindable]
			private var especialista1:String;

			[Bindable]
			private var especialista2:String;
			
			[Bindable]
			private var _personas:ArrayCollection;
			
			[Bindable]
			private var enClering:Boolean = false;
			
			public var showPreciosList:ArrayCollection = new ArrayCollection([
				{code:"0", label:"NINGUNO", action:"Ninguno"}, 
				{code:"1", label:"MINORISTA", action:"Minorista"}, 
				{code:"2", label:"INDUSTRIA", action:"Industria"},
				{code:"3", label:"REVENDEDOR", action:"Revendedor"},
				{code:"4", label:"DISTRIBUIDOR", action:"Distribuidor"}, 
				{code:"5", label:"DISTRIBUIDOR + MINORISTA", action:"Revendedor y minorista"}, 
				{code:"6", label:"REVENDEDOR + INDUSTRIA + MINORISTA", action:"Revendedor, industria y minorista"}, 
				{code:"7", label:"DISTRIBUIDOR + REVENTA + INDUSTRIA + MINORISTA", action:"Todos"}				
			]);
			
			public var showStockList:ArrayCollection = new ArrayCollection([
				"Ninguno",
				"Disponible",
				"Disponible y en transito"]);
			
			private var remObj:RemoteObject;

			private function init():void {
			}

			[Bindable]
			public function get cliente():Cliente {
				return _cliente;
			}

			public function set cliente(value:Cliente):void {
				this._cliente = value;

				if (container.numChildren > 0) {
					container.removeChildAt(0);
				}

				departamento = null;
				var dptoCodigo:String = cliente.contacto.deptoIdCto;
				for each (var dpto:Object in CatalogoFactory.getInstance().departamentos) {
					if (dptoCodigo == dpto.codigo) {
						departamento = dpto.nombre;
						break;
					}
				}
				
				pais = null;
				var paisCodigo:String = cliente.contacto.paisIdCto;
				for each (var p:Object in CatalogoFactory.getInstance().paises) {
					if (paisCodigo == p.codigo) {
						pais = p.nombre;
						break;
					}
				}

				zona = null;
				var zonaCodigo:String = cliente.contacto.zonaIdCto;
				for each (var zna:Object in CatalogoFactory.getInstance().zonas) {
					if (zonaCodigo == zna.codigo) {
						zona = zna.nombre;
						break;
					}
				}

				giro = null;
				var giroCodigo:String = cliente.contacto.girIdCto;
				for each (var gro:Object in CatalogoFactory.getInstance().giros) {
					if (giroCodigo == gro.codigo) {
						giro = gro.nombre;
						break;
					}
				}
				
				categ = null;
				var categCodigo:String = cliente.categCliId;
				for each (var c:Object in CatalogoFactory.getInstance().categoriasClientes) {
					if (categCodigo == c.codigo) {
						categ = c.nombre;
						break;
					}
				}
				
				enClering = cliente.categCliId == 'G';

				encargadoCuenta = null;
				especialista1 = null;
				especialista2 = null;
				for each (var vendedor:Vendedor in CatalogoFactory.getInstance().vendedores) {
					if (cliente.encargadoCuenta && cliente.encargadoCuenta == vendedor.codigo) {
						encargadoCuenta = vendedor.codigo + " - " + vendedor.nombre;
					}
					if (cliente.especialista1 && cliente.especialista1 == vendedor.codigo) {
						especialista1 = vendedor.codigo + " - " + vendedor.nombre;
					}
					if (cliente.especialista2 && cliente.especialista2 == vendedor.codigo) {
						especialista2 = vendedor.codigo + " - " + vendedor.nombre;
					}
				}
				
				if (_cliente.contacto.ctoBlob && _cliente.contacto.ctoBlob.length > 0) {
					var movieClipLoader:Loader = new Loader();
					movieClipLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, onMovieClipLoaderComplete);
					movieClipLoader.loadBytes(_cliente.contacto.ctoBlob);
				}
				
				dispatchEvent(new Event("changeCliente"));
			}

			private function cancelValues(evt:MouseEvent):void {
				dispatchEvent(new Event("CloseEditMode"));
			}

			private function showPanel():void {
			}

			protected function cmdEditar_clickHandler(event:MouseEvent):void {
				dispatchEvent(new Event("_editarPersona"));
			}

			// This function below is specific to this example.
			// It does the processing required to display the swf/png/jpeg file that we have just loaded.
			private function onMovieClipLoaderComplete(event:Event):void {
				// Hide progress bar
				var loadedContent:DisplayObject = event.target.content;
				var loader:Loader = event.target.loader as Loader;
				// Fit to stage
				loadedContent.scaleX = container.width / Math.max(loadedContent.width, loadedContent.height);
				loadedContent.scaleY = container.height / Math.max(loadedContent.width, loadedContent.height);

				container.addChild(loader);
			}


			protected function cmdPedirCompras_clickHandler(event:MouseEvent):void {
				var comprasWindow:TitleWindow = new TitleWindow();
				comprasWindow.title = "HISTÃ“RICO COMPRAS: " + cliente.nombre;
				comprasWindow.width = 1024;
				comprasWindow.height = 640;
				comprasWindow.addEventListener(CloseEvent.CLOSE, closeHandler);
				
				var frmHistoricoCompras:FrmHistoricoCompras = new FrmHistoricoCompras();
				frmHistoricoCompras.cliente = cliente.codigo;
				
				frmHistoricoCompras.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
					PopUpManager.removePopUp(comprasWindow as IFlexDisplayObject);
					comprasWindow = null;
				});
				
				var docPendientes:ArrayCollection = new ArrayCollection();
				docPendientes.addItem(facturasPendientes);
								
				PopUpManager.addPopUp(comprasWindow, Sprite(FlexGlobals.topLevelApplication), true);
				PopUpManager.centerPopUp(comprasWindow);
								
				comprasWindow.addElement(frmHistoricoCompras);
				
				comprasWindow.closeButton.visible = true;
			}

			protected function cmdFactPend_clickHandler(event:MouseEvent):void {
				obtenerDocumentosPendientes();
			}

			////////////////////////////////
			///// FACTURAS PENDIENTES //////
			////////////////////////////////

			public function obtenerDocumentosPendientes():void {
				if (!remFactPendientes) {
					remFactPendientes = new RemoteObject();
					remFactPendientes.destination = "CreatingRpc";
					remFactPendientes.channelSet = ServerConfig.getInstance().channelSet;
					remFactPendientes.addEventListener(ResultEvent.RESULT, resultFacturasPendientes);
					remFactPendientes.addEventListener(FaultEvent.FAULT, handleFault);
				}

				remFactPendientes.getDocumentosDeudores();
			}

			private var facturasPendientes:DocPendientesCliente;


			private function resultFacturasPendientes(event:ResultEvent):void {
				var data:ArrayCollection = event.result as ArrayCollection;

				var resultPendientes:ArrayCollection = new ArrayCollection();

				for each (var doc:DocumentoDeudor in data) {
					if (doc.deudor.codigo == _cliente.codigo) {
						if (resultPendientes.length > 0) {
							var pendiente:DocPendientesCliente = resultPendientes.getItemAt(0) as DocPendientesCliente;
							pendiente.documentos.addItem(doc);
						} else {
							var docsDeudores:DocPendientesCliente = new DocPendientesCliente();
							docsDeudores.codCliente = doc.deudor.codigo;
							docsDeudores.cliente = doc.deudor;
							docsDeudores.documentos.addItem(doc);

							resultPendientes.addItem(docsDeudores);
						}
					}
				}
				if (resultPendientes.length > 0) {
					facturasPendientes = resultPendientes.getItemAt(0) as DocPendientesCliente;
				} else {
					facturasPendientes = null;
				}

				mostrarFacturasPendientes();
			}


			private function mostrarFacturasPendientes():void {
				var facPendWindow:TitleWindow = new TitleWindow();
				facPendWindow.title = "Facturas pendientes: " + cliente.nombre;
				facPendWindow.width = 840;
				facPendWindow.height = 600;

				var frmListadoDeudores:ListadoDeudoresCliente = new ListadoDeudoresCliente();

				var docPendientes:ArrayCollection = new ArrayCollection();
				docPendientes.addItem(facturasPendientes);

				frmListadoDeudores.dataProvider = docPendientes;
				frmListadoDeudores.codigoCliente = cliente.codigo;

				PopUpManager.addPopUp(facPendWindow, Sprite(FlexGlobals.topLevelApplication), true);
				PopUpManager.centerPopUp(facPendWindow);
				
				facPendWindow.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
					PopUpManager.removePopUp(facPendWindow as IFlexDisplayObject);
					facPendWindow = null;
				});

				frmListadoDeudores.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
						PopUpManager.removePopUp(facPendWindow as IFlexDisplayObject);
						facPendWindow = null;
					});


				frmListadoDeudores.addEventListener(AbrirFacturaEvent.ABRIR_DOCUMENTO_CLIENTE, function(event:AbrirFacturaEvent):void {
						PopUpManager.removePopUp(facPendWindow as IFlexDisplayObject);
						facPendWindow = null;
						dispatchEvent(new AbrirFacturaEvent(AbrirFacturaEvent.ABRIR_DOCUMENTO, event.docId));
					});

				facPendWindow.addElement(frmListadoDeudores);

				facPendWindow.closeButton.visible = true;
			}

			/////////////////////////
			///// CARGAR TAREA //////
			/////////////////////////

			private var frmNuevaTarea:FrmNuevaTarea;

			private const WINDOW_WIDTH:Number = 640;

			private const WINDOW_HEIGHT:Number = 600;

			protected function cmdCargarTareas_clickHandler(event:MouseEvent):void {
				var wndAltaTarea:TitleWindow = new TitleWindow();
				wndAltaTarea.title = "CreaciÃ³n Tarea";
				wndAltaTarea.width = WINDOW_WIDTH;
				wndAltaTarea.height = WINDOW_HEIGHT;

				frmNuevaTarea = new FrmNuevaTarea();
				frmNuevaTarea.nueva = true;
				frmNuevaTarea.matutina = false;
				frmNuevaTarea.showFecha = true;
				frmNuevaTarea.fecha = new Date();
				frmNuevaTarea.contacto = cliente.contacto;

				PopUpManager.addPopUp(wndAltaTarea, Sprite(FlexGlobals.topLevelApplication), false);
				PopUpManager.centerPopUp(wndAltaTarea);

				wndAltaTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmNuevaTarea.addEventListener(CloseEvent.CLOSE, function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
					});

				frmNuevaTarea.addEventListener("_savedOk", function():void {
						wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
						PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
					});


				wndAltaTarea.addElement(frmNuevaTarea);

			}

			private function closeHandler(event:Event):void {
				var ttlWnd:TitleWindow = event.target as TitleWindow;
				ttlWnd.removeEventListener(CloseEvent.CLOSE, closeHandler);
				PopUpManager.removePopUp(ttlWnd as IFlexDisplayObject);
			}

			private function handleFault(event:FaultEvent):void {
				var message:String = event.fault && event.fault.rootCause && event.fault.rootCause.localizedMessage ? event.fault.rootCause.localizedMessage : null;
				if (!message) {
					message = event.message.toString();
				}				
				Alert.show(message, "Error", 4, null, null, StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('ErrorIcon'));
			}


			protected function button1_clickHandler(event:MouseEvent):void {
				var htmlstr:String = '';
				var url:String = "mailto:" + cliente.contacto.ctoEmail1 + "?subject=FULLTIME&body=" + htmlstr;
				var urlReq:URLRequest = new URLRequest(url);
				navigateToURL(urlReq);

			}

			protected function button2_clickHandler(event:MouseEvent):void {
				var htmlstr:String = '';
				var url:String = "mailto:" + cliente.contacto.ctoEmail2 + "?subject=FULLTIME&body=" + htmlstr;
				var urlReq:URLRequest = new URLRequest(url);
				navigateToURL(urlReq);

			}


			protected function cmdTareasPendientes_clickHandler(event:MouseEvent):void {
				var query:AgendaTareaQuery = new AgendaTareaQuery();
				query.contacto = cliente.codigo;

				remObj = new RemoteObject();
				remObj.destination = "CreatingRpc";
				remObj.channelSet = ServerConfig.getInstance().channelSet;
				remObj.showBusyCursor = true;
				remObj.addEventListener(ResultEvent.RESULT, onResult);
				remObj.addEventListener(FaultEvent.FAULT, onFault);

				remObj.queryTareas(query);

			}

			private function onResult(event:ResultEvent):void {
				var tareas:ArrayCollection = event.result as ArrayCollection;

				var wndAltaTarea:TitleWindow = new TitleWindow();
				wndAltaTarea.title = "Tareas pendientes de " + cliente.nombre;
				wndAltaTarea.width = 1024;
				wndAltaTarea.height = WINDOW_HEIGHT;
				
				PopUpManager.addPopUp(wndAltaTarea, Sprite(FlexGlobals.topLevelApplication), false);
				PopUpManager.centerPopUp(wndAltaTarea);

				var frmDataGrid:FrmExpedicionesClienteInfo = new FrmExpedicionesClienteInfo();
				frmDataGrid.dgTareas.mostrarSoloPendientes = true;
				frmDataGrid.dgTareas.showDateColumn = true;
				frmDataGrid.dgTareas.modoVizualizacion = true;

				frmDataGrid.tareas = tareas;

				wndAltaTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmDataGrid.addEventListener(CloseEvent.CLOSE, function():void {
					wndAltaTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
					PopUpManager.removePopUp(wndAltaTarea as IFlexDisplayObject);
				});

				wndAltaTarea.addElement(frmDataGrid);

			}

			private function onFault(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}

			[Bindable]
			public function get personas():ArrayCollection {
				return _personas;
			}

			public function set personas(value:ArrayCollection):void {
				_personas = value;

				_changePersonas = true;

				invalidateProperties();
			}

			private var _changePersonas:Boolean = false;

			override protected function commitProperties():void {
				super.commitProperties();

				if (_changePersonas) {
					_changePersonas = false;

					vgPersonas.removeAllElements();

					var i:int = 0;
					for each (var person:Persona in personas) {
						if (i > 4) {
							//break;
						}
						var lblNombre:Label = new Label;
						lblNombre.width = 160;
						lblNombre.setStyle("fontSize", 10);
						lblNombre.maxDisplayedLines = 1;
						lblNombre.showTruncationTip = true;
						lblNombre.text = person.nombre;

						var lblCargo:Label = new Label;
						lblCargo.setStyle("fontSize", 10);
						lblCargo.width = 140;
						lblCargo.maxDisplayedLines = 1;
						lblCargo.showTruncationTip = true;
						lblCargo.text = person.ctoPerCargo;

						var lblTelefono:Label = new Label;
						lblTelefono.setStyle("fontSize", 10);
						lblTelefono.width = 110;
						lblTelefono.maxDisplayedLines = 1;
						lblTelefono.showTruncationTip = true;
						lblTelefono.text = person.ctoPerTelefono;

						var lblCelular:Label = new Label;
						lblCelular.setStyle("fontSize", 10);
						lblCelular.width = 110;
						lblCelular.maxDisplayedLines = 1;
						lblCelular.showTruncationTip = true;
						lblCelular.text = person.ctoPerCelular;

						var lblEMail:Label = new Label;
						lblEMail.setStyle("fontSize", 10);
						lblEMail.width = 180;
						lblEMail.maxDisplayedLines = 1;
						lblEMail.showTruncationTip = true;
						lblEMail.text = person.ctoPerEmail;

						var hGroup:HGroup = new HGroup();
						hGroup.addElement(lblNombre);
						hGroup.addElement(lblCargo);
						hGroup.addElement(lblTelefono);
						hGroup.addElement(lblCelular);
						hGroup.addElement(lblEMail);

						vgPersonas.addElement(hGroup);

						i++;
					}

				}
			}

			////////////////////////////////////
			///// COTIZACIONES PENDIENTES //////
			////////////////////////////////////

			protected function cmdCotizacionesPendientes_clickHandler(event:MouseEvent):void {
				var facPendWindow:TitleWindow = new TitleWindow();
				facPendWindow.title = "Cotizaciones Pendientes: " + cliente.nombre;
				facPendWindow.width = 1024;
				facPendWindow.height = 640;
				facPendWindow.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
						PopUpManager.removePopUp(facPendWindow as IFlexDisplayObject);
						facPendWindow = null;
					});

				var frmCotizaciones:ListadoCotizacionesPanel = new ListadoCotizacionesPanel();
				frmCotizaciones.cliente = cliente;
				frmCotizaciones.obtenerFactuasPendientes(1);
				frmCotizaciones.showButtons = false;

				PopUpManager.addPopUp(facPendWindow, Sprite(FlexGlobals.topLevelApplication), true);
				PopUpManager.centerPopUp(facPendWindow);

				frmCotizaciones.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
						PopUpManager.removePopUp(facPendWindow as IFlexDisplayObject);
						facPendWindow = null;
					});
				frmCotizaciones.addEventListener(AbrirFacturaEvent.ABRIR_DOCUMENTO_CLIENTE, function(event:AbrirFacturaEvent):void {
						dispatchEvent(new AbrirFacturaEvent(AbrirFacturaEvent.ABRIR_DOCUMENTO, event.docId));
					});
				facPendWindow.addElement(frmCotizaciones);

				facPendWindow.closeButton.visible = true;
			}			
			
			private function reloadPersonas():void {
				var personaRemObj:RemoteObject = new RemoteObject();
				personaRemObj.destination = "CreatingRpc";
				personaRemObj.channelSet = ServerConfig.getInstance().channelSet;
				personaRemObj.addEventListener(ResultEvent.RESULT, function(event:ResultEvent):void {
					var result:* = event.result;
					personas = result as ArrayCollection;
				});
				personaRemObj.addEventListener(FaultEvent.FAULT, handleFault);
				
				personaRemObj.showBusyCursor = true;
				personaRemObj.getPersonas(cliente.codigo);
			}
			
			protected function cmdOrdenesVentas_clickHandler(event:MouseEvent):void {
				var facPendWindow:TitleWindow = new TitleWindow();
				facPendWindow.title = "Ordenes de Venta: " + cliente.nombre;
				facPendWindow.width = 1024;
				facPendWindow.height = 640;
				facPendWindow.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
					PopUpManager.removePopUp(facPendWindow as IFlexDisplayObject);
					facPendWindow = null;
				});
				
				var frmCotizaciones:ListadoCotizacionesPanel = new ListadoCotizacionesPanel();
				frmCotizaciones.cliente = cliente;
				frmCotizaciones.obtenerFactuasPendientes(10);
				
				PopUpManager.addPopUp(facPendWindow, Sprite(FlexGlobals.topLevelApplication), true);
				PopUpManager.centerPopUp(facPendWindow);
				
				frmCotizaciones.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
					PopUpManager.removePopUp(facPendWindow as IFlexDisplayObject);
					facPendWindow = null;
				});
				frmCotizaciones.addEventListener(AbrirFacturaEvent.ABRIR_DOCUMENTO_CLIENTE, function(event:AbrirFacturaEvent):void {
					dispatchEvent(new AbrirFacturaEvent(AbrirFacturaEvent.ABRIR_DOCUMENTO, event.docId));
				});
				facPendWindow.addElement(frmCotizaciones);
				
				facPendWindow.closeButton.visible = true;				
			}
			
			private function editarPersonas(evt:Event):void {
				var wndDialog:TitleWindow = new TitleWindow();
				wndDialog.title = "Editar personas";
				wndDialog.width = 700;
				wndDialog.height = 520;
				
				var frmContacto:NuevaPersonaEditor = new NuevaPersonaEditor();
				frmContacto.personas = personas;
				frmContacto.cliente = cliente;
				
				PopUpManager.addPopUp(wndDialog, this.parentApplication.owner, false);
				PopUpManager.centerPopUp(wndDialog);
				
				wndDialog.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
					personas = frmContacto.personas;

					var ttlWnd:TitleWindow = event.target as TitleWindow;
					ttlWnd.removeEventListener(CloseEvent.CLOSE, closeHandler);
					PopUpManager.removePopUp(ttlWnd as IFlexDisplayObject);
				});

				frmContacto.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
					personas = frmContacto.personas;
					
					PopUpManager.removePopUp(wndDialog as IFlexDisplayObject);
					wndDialog = null;
				});
				
				wndDialog.addElement(frmContacto);
			}

			
			protected function chbActivo_changeHandler(event:Event):void {
				var clienteRemObj:RemoteObject = new RemoteObject();
				clienteRemObj.destination = "CreatingRpc";
				clienteRemObj.channelSet = ServerConfig.getInstance().channelSet;
				clienteRemObj.addEventListener(ResultEvent.RESULT, function(event:ResultEvent):void {
					cliente.contacto.ctoActivo = chbActivo.selected ? "S" : "N";
					dispatchEvent(new ClienteEvent("changeClientState", cliente));
				});
				
				clienteRemObj.addEventListener(FaultEvent.FAULT, handleFault);					
				clienteRemObj.showBusyCursor = true;
				clienteRemObj.updateClienteState(cliente.codigo, chbActivo.selected);
			}
			
			protected function cmdCargarCotizacion_clickHandler(event:MouseEvent):void {
				dispatchEvent(new ClienteEvent(ClienteEvent.CREAR_COTIZACION_CLIENTE, cliente));
			}
			
			protected function cmdCargarOrdenVenta_clickHandler(event:MouseEvent):void {
				dispatchEvent(new ClienteEvent(ClienteEvent.CREAR_ORDEN_VENTA_CLIENTE, cliente));
			}
			
			[Bindable(event="changeCliente")]
			public function getPremisoPrecios():String {
				if (cliente.permisoPrecios) {
					return showPreciosList.getItemAt(int(cliente.permisoPrecios)).action as String;
				} else {
					return "Ninguno";
				}
 			}

			[Bindable(event="changeCliente")]
			public function getPermisoStock():String {
				if (cliente.permisoStock) {
					return showStockList.getItemAt(int(cliente.permisoStock)) as String;
				} else {
					return "Ninguno";
				}
			}
			
			protected function btnWeb_clickHandler(event:MouseEvent):void {
				if (cliente.contacto.ctoWeb && cliente.contacto.ctoWeb.length > 0) {
					
					var urlRequest:URLRequest = null;
					if (cliente.contacto.ctoWeb.indexOf("http://") >= 0) {
						urlRequest = new URLRequest(cliente.contacto.ctoWeb);
					} else {
						urlRequest = new URLRequest("http://" + cliente.contacto.ctoWeb);
					}
					
					// To open in a new tab
					navigateToURL(urlRequest, "_blank");
				}
				
			}

			
			protected function btnGoogleMaps_clickHandler(event:MouseEvent):void {
				var urlRequest:URLRequest = new URLRequest(cliente.googleMaps);
				
				if (cliente.googleMaps.indexOf("https://") >= 0) {
					urlRequest = new URLRequest(cliente.googleMaps);
				} else if (cliente.googleMaps.indexOf("@") == 0) {
					urlRequest = new URLRequest("https://www.google.com/maps/" + cliente.googleMaps);
				} else {
					urlRequest = new URLRequest("https://goo.gl/maps/" + cliente.googleMaps);
				}				
				navigateToURL(urlRequest, "_blank");
				
			}
			
		]]>
	</mx:Script>


	<s:VGroup width="100%" height="100%" paddingRight="5" paddingLeft="5">
		<s:HGroup width="100%" height="100%" horizontalAlign="left" verticalAlign="top">
			<s:VGroup horizontalAlign="center" paddingLeft="5" includeInLayout="false" visible="false">
				<s:SkinnableContainer width="140" height="140" styleName="photoFramework">
					<s:layout>
						<s:VerticalLayout horizontalAlign="center" paddingLeft="5" paddingTop="0" verticalAlign="middle" />
					</s:layout>
					<s:MovieClipSWFLoader id="container" width="105" height="105" />
				</s:SkinnableContainer>
				<s:Label fontSize="14" fontWeight="normal" text="Foto" />
			</s:VGroup>
			<s:VGroup width="100%" height="100%" fontWeight="normal">
				<s:HGroup width="100%" verticalAlign="bottom">
					<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="10">
						<mx:LinkButton label="{cliente.contacto.ctoNom}" fontSize="18" click="btnWeb_clickHandler(event)"/>
						<s:Button label="" height="36" visible="{cliente.contacto.ctoWeb &amp;&amp; cliente.contacto.ctoWeb.length > 0}" styleName="goButton16"  click="btnWeb_clickHandler(event)" toolTip="{cliente.contacto.ctoWeb}"/>
					</s:HGroup>
					<s:HGroup height="100%" verticalAlign="middle">
						<s:CheckBox id="chbActivo" label="Activo" selected="{cliente.contacto.ctoActivo == 'S'}" alpha="1.0" change="chbActivo_changeHandler(event)" fontWeight="normal"
									enabled="{GeneralOptions.getInstance().loggedUser.esSupervisor()}" fontSize="14"/>
						
					</s:HGroup>
					<s:Spacer width="20"/>
					<s:HGroup visible="{cliente.contacto &amp;&amp; cliente.contacto.ctoNotas &amp;&amp; cliente.contacto.ctoNotas.length > 0}" height="100%" verticalAlign="middle">
						<s:Button click="ppNotas.displayPopUp = true" label="Notas" styleName="textButton" width="80" height="100%"/>
						<s:PopUpAnchor id="ppNotas" popUpPosition="above">
							<s:Panel width="580" height="360" title="Notas de {cliente.nombre}">
								<s:layout>
									<s:VerticalLayout horizontalAlign="center" paddingBottom="10" gap="0" />
								</s:layout>
								<s:TextArea width="100%" height="100%" borderAlpha="0" contentBackgroundAlpha="0" text="{cliente.contacto.ctoNotas}" editable="false" />
								<s:controlBarContent>
									<s:HGroup width="100%" horizontalAlign="right" paddingBottom="0" paddingTop="0">
										<s:Button click="{ppNotas.displayPopUp = false}" label="Cerrar" styleName="textButton" width="100" />
									</s:HGroup>
								</s:controlBarContent>
								
							</s:Panel>
						</s:PopUpAnchor>
					</s:HGroup>
					<s:Button id="cmdEditar" click="cmdEditar_clickHandler(event)" label="Editar" styleName="editarCliente" 
							  visible="{GeneralOptions.getInstance().loggedUser.permisoId != Usuario.USUARIO_TITO}" />
				</s:HGroup>
				<mx:HRule width="100%" />
				<s:Spacer height="5" />
				<s:HGroup width="100%">
					<s:VGroup width="67%">
						<s:HGroup verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontSize="14" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="NÃºmero" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblCodigo" width="90" fontSize="14" maxDisplayedLines="1" text="{cliente.codigo}" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="RazÃ³n social" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblRazonSocial" width="100%" text="{cliente.contacto.ctoRSocial ? cliente.contacto.ctoRSocial : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="RUT" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblRUT" width="100%" text="{cliente.contacto.ctoRUT ? cliente.contacto.ctoRUT : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>

					</s:VGroup>
					<s:VGroup width="33%">
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="TelÃ©fono" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblTelefono" width="100%" text="{cliente.contacto.ctoTelefono ? cliente.contacto.ctoTelefono : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Fax" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblFax" width="100%" text="{cliente.contacto.ctoFax ? cliente.contacto.ctoFax : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
					</s:VGroup>
				</s:HGroup>
				<s:HGroup width="100%">
					<s:VGroup width="67%" horizontalAlign="right">
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="DirecciÃ³n" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblDireccion" width="100%" text="{cliente.contacto.ctoDireccion ? cliente.contacto.ctoDireccion : '-'}" maxDisplayedLines="2" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:HGroup width="50%" paddingTop="0" verticalAlign="middle" styleName="ItemStyle" gap="5">
								<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" 
									text="{cliente.contacto.ctoDocumentoSigla ? cliente.contacto.ctoDocumentoSigla : ''}" />
								<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
									</s:layout>
									<s:Label width="100%" text="{cliente.contacto.ctoDocumento ? cliente.contacto.ctoDocumento : ''}" maxDisplayedLines="1" showTruncationTip="true" />
								</s:BorderContainer>
							</s:HGroup>

							<s:HGroup width="50%" verticalAlign="middle" styleName="ItemStyle">
								<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="PaÃ­s" />
								<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
									</s:layout>
									<s:Label id="lblPais" width="100%" text="{pais ? pais : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
								</s:BorderContainer>
							</s:HGroup>
						</s:HGroup>
					</s:VGroup>
					<s:VGroup width="33%">
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Localidad" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblLocalidad" width="100%" text="{cliente.contacto.ctoLocalidad ? cliente.contacto.ctoLocalidad : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Depto" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblDepartamento" width="100%" text="{departamento ? departamento : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
					</s:VGroup>
				</s:HGroup>
				<s:HGroup width="100%">
					<s:HGroup width="66%" verticalAlign="middle" styleName="ItemStyle">
						<s:Label width="{DEFAULT_WITH}" fontSize="13"  textAlign="right" maxDisplayedLines="1" text="Google Maps" />
						<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minHeight="0" borderAlpha=".6">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="left" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" verticalAlign="middle" />
							</s:layout>
							<s:TextInput width="100%" borderVisible="false" contentBackgroundAlpha="0.75" editable="false" text="{cliente.googleMaps ? cliente.googleMaps : ''}" />
							<mx:LinkButton id="btnGoogleMaps" width="60" click="btnGoogleMaps_clickHandler(event)" label="Ir " toolTip="{cliente.googleMaps}" />
						</s:BorderContainer>
					</s:HGroup>
				</s:HGroup>
				<s:HGroup width="100%">
					<s:HGroup width="34%" verticalAlign="middle" styleName="ItemStyle">
						<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Celular" />
						<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
							</s:layout>
							<s:Label id="lblCelularContacto" width="100%" text="{cliente.contacto.ctoCelular ? cliente.contacto.ctoCelular : ''}" maxDisplayedLines="1" showTruncationTip="true" />
						</s:BorderContainer>
					</s:HGroup>
					<s:HGroup width="66%" verticalAlign="middle" styleName="ItemStyle">
						<s:Label width="80" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Correo 1" />
						<s:TextInput id="lblEmailContacto1" width="100%" text="{cliente.contacto.ctoEmail1 ? cliente.contacto.ctoEmail1 : '-'}" editable="false"  borderAlpha=".2"/>
						<s:Button click="button1_clickHandler(event)" label="Crear Email" enabled="{cliente.contacto.ctoEmail1 != null}" styleName="textButton" height="24"/>
					</s:HGroup>
				</s:HGroup>
				<s:HGroup width="100%">
					<s:HGroup width="34%" verticalAlign="middle" styleName="ItemStyle">
					</s:HGroup>
					<s:HGroup width="66%" verticalAlign="middle" styleName="ItemStyle">
						<s:Label width="80" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Correo 2" />
						<s:TextInput id="lblEmailContacto2" width="100%" text="{cliente.contacto.ctoEmail2 ? cliente.contacto.ctoEmail2 : '-'}" editable="false" borderAlpha=".2"/>
						<s:Button click="button2_clickHandler(event)" label="Crear Email" enabled="{cliente.contacto.ctoEmail2 != null}" styleName="textButton" height="24"/>
					</s:HGroup>
				</s:HGroup>
				<s:HGroup width="100%">
					<s:HGroup width="34%" verticalAlign="middle" styleName="ItemStyle">
						<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Zona" />
						<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
							</s:layout>
							<s:Label id="lblZona" width="100%" text="{zona ? zona : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
						</s:BorderContainer>
					</s:HGroup>
					<s:HGroup width="33%" verticalAlign="middle" styleName="ItemStyle">
						<s:Label width="80" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Agencia" />
						<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
							</s:layout>
							<s:Label id="lblAgencia" width="100%" text="{cliente.agencia ? cliente.agencia : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
						</s:BorderContainer>
					</s:HGroup>
					<s:HGroup width="33%" verticalAlign="middle" styleName="ItemStyle">
						<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Giro" />
						<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
							</s:layout>
							<s:Label id="lblGiro" width="100%" text="{giro ? giro : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
						</s:BorderContainer>
					</s:HGroup>
				</s:HGroup>

				<s:HGroup width="100%">
					<s:VGroup width="34%">
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Moneda" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblMoneda" width="100%" text="{cliente.moneda ? cliente.moneda.nombre : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" paddingTop="5" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Tope crÃ©dito" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblTopeCredito" width="100%" text="{(cliente.moneda ? cliente.moneda.simbolo : '') + ' ' + cliente.cliTopeCredito}" maxDisplayedLines="1"
										 showTruncationTip="true" visible="{!isNaN(cliente.cliTopeCredito)}" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" paddingTop="5" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="E. elÃ©ctica" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblEnergiaElectrica" width="100%" text="{cliente.energiaElectrica ? cliente.energiaElectrica : ''}" maxDisplayedLines="1"
										 showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" paddingTop="5" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Ve stock" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblVerStock" width="100%" text="{getPermisoStock()}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
							
						</s:HGroup>
					</s:VGroup>

					<s:VGroup width="33%">
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="80" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Forma pago" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblFormaPago" width="100%" text="{cliente.planPagos.nombre ? cliente.planPagos.nombre : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" paddingTop="5" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="80" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Lista precios" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblListaPrecios" width="100%" text="{cliente.preciosVenta.nombre ? cliente.preciosVenta.nombre : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:Spacer height="26" />
						<s:HGroup width="100%" paddingTop="5" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="80" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Ve precios" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label id="lblVerPrecios" width="100%" text="{getPremisoPrecios()}" maxDisplayedLines="1"
										 showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>

					</s:VGroup>

					<s:VGroup width="33%">
						<s:HGroup width="100%" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="DÃ­a/Hora pago" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label width="100%" text="{cliente.diaHoraPagos ? cliente.diaHoraPagos : '-'}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" paddingTop="5" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="Descuento" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label width="100%" text="{!isNaN(cliente.cliDto1) ? cliente.cliDto1 : '0'}%" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" paddingTop="5" verticalAlign="middle" styleName="ItemStyle">
							<s:Label width="{DEFAULT_WITH}" color="0x222222" fontWeight="normal" textAlign="right" maxDisplayedLines="1" text="CategorÃ­a" />
							<s:BorderContainer width="100%" backgroundColor="0xFAFAFA" minWidth="0" minHeight="0" borderAlpha=".3">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="left" paddingBottom="2" paddingLeft="5" paddingRight="5" paddingTop="4" />
								</s:layout>
								<s:Label width="100%" text="{categ}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:BorderContainer>
						</s:HGroup>
					</s:VGroup>
				</s:HGroup>


				<s:HGroup width="100%" paddingTop="10">
					<s:VGroup width="100%" visible="{cliente.vendedor &amp;&amp; cliente.vendedor.codigo &amp;&amp; StringUtil.trim(cliente.vendedor.codigo).length > 0}">
						<s:Label color="0x222222" fontSize="13" fontWeight="normal" paddingLeft="5" text="Vendedor" />
						<mx:HRule width="100%" />
						<s:HGroup width="100%" paddingLeft="10">
							<s:HGroup styleName="ItemStyle">
								<s:Label id="lblVendedor" text="{cliente.vendedor.codigo + ' - ' + cliente.vendedor.nombre}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:HGroup>
						</s:HGroup>
					</s:VGroup>

					<s:VGroup width="100%" visible="{encargadoCuenta != null}">
						<s:Label color="0x222222" fontSize="13" fontWeight="normal" paddingLeft="5" text="Encargado de cuenta" />
						<mx:HRule width="100%" />
						<s:HGroup width="100%" paddingLeft="10">
							<s:HGroup width="100%" styleName="ItemStyle">
								<s:Label id="lblNombreEncargadoCuenta" width="100%" text="{encargadoCuenta}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:HGroup>
						</s:HGroup>
					</s:VGroup>
					<s:VGroup width="100%" visible="{especialista1 || especialista2}">
						<s:Label color="0x222222" fontSize="13" fontWeight="normal" paddingLeft="5" text="Especialistas" />
						<mx:HRule width="100%" />
						<s:HGroup width="100%" visible="{cliente.especialista1 != null}" includeInLayout="{especialista1 != null}">
							<s:HGroup width="100%" paddingLeft="10" styleName="ItemStyle">
								<s:Label id="lblNombreEspecialista1" width="100%" text="{especialista1}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:HGroup>
						</s:HGroup>
						<s:HGroup width="100%" visible="{cliente.especialista2 != null}" includeInLayout="{especialista2 != null}">
							<s:HGroup width="100%" paddingLeft="10" styleName="ItemStyle">
								<s:Label id="lblNombreEspecialista2" width="100%" text="{especialista2}" maxDisplayedLines="1" showTruncationTip="true" />
							</s:HGroup>
						</s:HGroup>
					</s:VGroup>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" paddingTop="5">
					<s:VGroup width="100%" height="100%">
						<s:HGroup width="100%" paddingRight="10" verticalAlign="bottom">
							<s:Label color="0x222222" fontSize="13" fontWeight="normal" paddingLeft="5" text="Personas" />
							<s:Spacer width="100%" />
							<!-- s:Button id="cmdAgregarPersona" label="Agregar" click="cmdAgregarPersona_clickHandler(event)"/ -->
							<s:Button id="cmdEditarPersona" label="Editar Personas" click="editarPersonas(event)" styleName="textButton" height="24"
									  visible="{GeneralOptions.getInstance().loggedUser.permisoId != Usuario.USUARIO_TITO}" />
						</s:HGroup>
						<mx:HRule width="100%" />
						<s:VGroup width="100%">
							<s:HGroup width="100%" paddingLeft="5">
								<s:Label width="160" color="0x666666" fontSize="11" text="Nombre" maxDisplayedLines="1" showTruncationTip="true" />
								<s:Label width="140" color="0x666666" fontSize="11" text="Cargo" maxDisplayedLines="1" showTruncationTip="true" />
								<s:Label width="110" color="0x666666" fontSize="11" text="TelÃ©fono" maxDisplayedLines="1" showTruncationTip="true" />
								<s:Label width="110" color="0x666666" fontSize="11" text="Celular" maxDisplayedLines="1" showTruncationTip="true" />
								<s:Label width="180" color="0x666666" fontSize="11" text="Email" maxDisplayedLines="1" showTruncationTip="true" />
							</s:HGroup>
							<s:Scroller width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="auto" maxHeight="40">
								<s:VGroup id="vgPersonas" width="100%" paddingLeft="5">
								</s:VGroup>
							</s:Scroller>
						</s:VGroup>
					</s:VGroup>
				</s:HGroup>
			</s:VGroup>
		</s:HGroup>

		<s:HGroup paddingBottom="7" paddingLeft="5">
			<s:BorderContainer backgroundAlpha=".75" backgroundColor="0xFFCACA" cornerRadius="5" minWidth="0" minHeight="0" borderWeight="2">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="left" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" />
				</s:layout>
				<mx:LinkButton id="cmdTareasPendientes" height="32" click="cmdTareasPendientes_clickHandler(event)" label="Tareas" enabled="true" styleName="prueba1" />
				<mx:LinkButton id="cmdCotizacionesPendientes" height="32" click="cmdCotizacionesPendientes_clickHandler(event)" label="Cotizaciones" enabled="true" styleName="prueba1" cornerRadius="0"/>
				<mx:LinkButton id="cmdOrdenesVentas" height="32" click="cmdOrdenesVentas_clickHandler(event)" label="Ordenes" enabled="true" styleName="prueba1" cornerRadius="0"/>
				<mx:LinkButton id="cmdFactPend" height="32" click="cmdFactPend_clickHandler(event)" label="Facturas" styleName="prueba1"/>
			</s:BorderContainer>
			<s:BorderContainer backgroundAlpha=".75" backgroundColor="0xCACAFF" cornerRadius="5" minWidth="0" minHeight="0" borderWeight="2">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="left" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" />
				</s:layout>
				<mx:LinkButton id="cmdPedirCompras" height="32" click="cmdPedirCompras_clickHandler(event)" label="Compras" styleName="prueba3"/>
			</s:BorderContainer>
			<s:BorderContainer backgroundAlpha=".75" backgroundColor="0xCAFFCA" cornerRadius="5" minWidth="0" minHeight="0" borderWeight="2">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="left" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" />
				</s:layout>				
				<mx:LinkButton id="cmdCargarTareas" height="32" click="cmdCargarTareas_clickHandler(event)" label="Cargar Tarea" styleName="prueba2"/>
				<mx:LinkButton id="cmdCargarCotizacion" height="32" click="cmdCargarCotizacion_clickHandler(event)" label="CotizaciÃ³n" styleName="prueba2" enabled="{!enClering}"/>
				<mx:LinkButton id="cmdCargarOrdenVenta" height="32" click="cmdCargarOrdenVenta_clickHandler(event)" label="Orden Venta" styleName="prueba2" enabled="{!enClering}"/>
			</s:BorderContainer>
		</s:HGroup>
			

	</s:VGroup>
	
	<s:Group id="grpWarning" width="100%" height="100%" left="0" top="0" showEffect="Fade" includeInLayout="{enClering}"
			 visible="{enClering}">
		<s:Rect id="topMaskRect" x="350" y="0" width="{grpWarning.width - 700}" height="48">
			<s:fill>
				<s:SolidColor color="#FF0000" alpha="0.95" />
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke id="borderStroke" color="#CC0000" weight="1" alpha=".5" />
			</s:stroke>
		</s:Rect>
		<s:Label x="240" y="16" width="{grpWarning.width - 480}"  text="Cliente en el clering" fontSize="18" textAlign="center" color="white"/>
	</s:Group>


</mx:Canvas>
