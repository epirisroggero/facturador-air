<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:personas="biz.fulltime.ui.personas.*" xmlns:proveedores="biz.fulltime.ui.proveedores.*"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.dto.ProveedorDTO;
			import biz.fulltime.event.ProveedorEvent;
			import biz.fulltime.model.Proveedor;

			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;

			private var _proveedorSeleccionado:Proveedor = null;
			
			[Bindable]
			private var personas:ArrayCollection;


			[Bindable]
			public function get proveedorSeleccionado():Proveedor {
				return _proveedorSeleccionado;
			}

			public function set proveedorSeleccionado(value:Proveedor):void {
				_proveedorSeleccionado = value;
			}

			protected function hdividedbox1_creationCompleteHandler(event:FlexEvent):void {
				leftPanel.addEventListener(ProveedorEvent.PROVEEDOR_SELECCIONADO, cambioProveedorSeleccionado);
				leftPanel.addEventListener(ProveedorEvent.PROVEEDOR_NUEVO, nuevoProveedor);

				rightPanel.addEventListener(ProveedorEvent.CANCELAR_EDICION, function(evt:ProveedorEvent):void {
						leftPanel.visible = true;
						leftPanel.includeInLayout = true;

						leftPanel.cancelar();
					});
				rightPanel.addEventListener(ProveedorEvent.PROVEEDOR_NUEVO, function(evt:ProveedorEvent):void {
						leftPanel.visible = true;
						leftPanel.includeInLayout = true;

						leftPanel.finalizar(evt.proveedorDTO);
					});
				
				rightPanel.addEventListener("changeProveedorState", function(evt:ProveedorEvent):void {
					if (leftPanel.proveedoresList.listaProveedors.selectedItem) {
						leftPanel.proveedoresList.listaProveedors.selectedItem.activo = evt.proveedor.contacto.ctoActivo == "S";
					}
				});


			}

			private function cambioProveedorSeleccionado(event:ProveedorEvent):void {
				var proveedorRemObj:RemoteObject = new RemoteObject();
				proveedorRemObj.destination = "CreatingRpc";
				proveedorRemObj.channelSet = ServerConfig.getInstance().channelSet;
				proveedorRemObj.addEventListener(ResultEvent.RESULT, resultProveedor);
				proveedorRemObj.addEventListener(FaultEvent.FAULT, handleFault);
				proveedorRemObj.showBusyCursor = true;
				proveedorRemObj.findCatalogEntity("Proveedor", event.proveedorDTO.codigo);
			}

			private function resultProveedor(event:ResultEvent):void {
				var result:* = event.result;

				if (result is Proveedor) {
					var provider:Proveedor = result as Proveedor;

					callLater(function():void {
							provider.esNuevo = false;
							proveedorSeleccionado = provider;
						});

					var personaRemObj:RemoteObject = new RemoteObject();
					personaRemObj.destination = "CreatingRpc";
					personaRemObj.channelSet = ServerConfig.getInstance().channelSet;
					personaRemObj.addEventListener(ResultEvent.RESULT, resultPersonas);
					personaRemObj.addEventListener(FaultEvent.FAULT, handleFault);

					personaRemObj.showBusyCursor = true;
					personaRemObj.getPersonas(provider.codigo);
				}
			}


			private function resultPersonas(event:ResultEvent):void {
				var result:* = event.result;

				personas = result as ArrayCollection;
			}

			private function nuevoProveedor(event:ProveedorEvent):void {
				var p:ProveedorDTO = event.proveedorDTO;

				var provider:Proveedor = new Proveedor();

				provider.codigo = p.codigo;
				provider.nombre = p.nombre;
				provider.esNuevo = true;

				leftPanel.visible = false;
				leftPanel.includeInLayout = false;

				rightPanel.setNuevoProveedor(provider);
			}

			private function handleFault(event:FaultEvent):void {
				var message:String = event.fault && event.fault.rootCause && event.fault.rootCause.localizedMessage ? event.fault.rootCause.localizedMessage : null;
				if (!message) {
					message = event.message.toString();
				}				
				Alert.show(message, "Error", 4, null, null, StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('ErrorIcon'));
			}
		]]>
	</fx:Script>

	<mx:HDividedBox width="100%" height="100%" creationComplete="hdividedbox1_creationCompleteHandler(event)">
		<proveedores:ProveedorEditorLeftPanel id="leftPanel" width="320" height="100%" />
		<proveedores:ProveedorEditorRightPanel id="rightPanel" width="100%" height="100%" proveedor="{proveedorSeleccionado}" personas="{personas}" />
	</mx:HDividedBox>

</s:Group>
