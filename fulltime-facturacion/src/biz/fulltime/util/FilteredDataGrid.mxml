<?xml version="1.0" encoding="utf-8"?>
<s:DataGrid xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark">

	<fx:Script>
		<![CDATA[
			import biz.fulltime.model.CodigoNombreEntity;
			
			import mx.collections.ArrayCollection;

			private var _selectedName:String;

			private var _filter:String;
			private var _map:Dictionary;
			private var _keys:ArrayCollection;
			
			
			public function filterM(map:Dictionary, keys:ArrayCollection) {
				_map = map;	
				_keys = keys;
				
				filtermap();
			}

			public function filtermap():void {
				if (dataProvider is ArrayCollection) {
					var _dataProviderAC:ArrayCollection = dataProvider as ArrayCollection;
					_dataProviderAC.filterFunction = filterFirstM;
					_dataProviderAC.refresh();
				}
			}
			
			private function filterFirstM(item:Object):Boolean {
				var hasFiltes:Boolean = true;
				var result:Boolean = true;
				for each (var k:String in _keys) {
					if (item[k] is CodigoNombreEntity) {
						var value:String = item[k].codigo + item[k].nombre;
						result = result && value != null && value.toLowerCase().match(new RegExp(_map[k].toLowerCase(), 'i'));
					} else {
						result = result && item[k] != null && item[k].match(new RegExp(_map[k].toLowerCase(), 'i'));
					}
				}
				return result;
					
			}

				
			public function filter(colName:String, filter:String, reset:Boolean):void {
				_selectedName = colName;
				_filter = filter;

				if (_selectedName != '') {
					filteree();
				} else if (reset) {
					filterReset();
				}

				if (this.dataProviderLength < 1) {
					filterReset();
				}
			}

			public function hasFilter():Boolean {
				return _filter != null;
			}

			public function filteree():void {
				if (dataProvider is ArrayCollection) {
					var _dataProviderAC:ArrayCollection = dataProvider as ArrayCollection;
					_dataProviderAC.filterFunction = filterFirst;
					_dataProviderAC.refresh();
				}
			}

			public function filterReset():void {
				if (dataProvider is ArrayCollection) {
					var _dataProviderAC:ArrayCollection = dataProvider as ArrayCollection;
					_dataProviderAC.filterFunction = null;
					_dataProviderAC.refresh();
				}
				_filter = null;
			}

			private function filterFirst(item:Object):Boolean {
				if (item[_selectedName] != null) {
					if (item[_selectedName] is CodigoNombreEntity) {
						var value:String = item[_selectedName].codigo + item[_selectedName].nombre;
						return value.match(new RegExp(_filter.toLowerCase(), 'i'));
					} else {
						return item[_selectedName].match(new RegExp(_filter.toLowerCase(), 'i'));
					}
				} else {
					return false;
				}
			}
			

		]]>
	</fx:Script>
</s:DataGrid>
